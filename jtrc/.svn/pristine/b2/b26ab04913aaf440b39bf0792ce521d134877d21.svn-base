<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.i84.earnpoint.mapper.ZcDissertationScoreMapper">
  <resultMap id="BaseResultMap" type="com.i84.earnpoint.model.ZcDissertationScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="p_score" jdbcType="INTEGER" property="pScore" />
    <result column="p_msg" jdbcType="VARCHAR" property="pMsg" />
    <result column="j_date" jdbcType="TIMESTAMP" property="jDate" />
    <result column="del_date" jdbcType="TIMESTAMP" property="delDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="r_id" jdbcType="INTEGER" property="rId" />
    <result column="expert_id" jdbcType="INTEGER" property="expertId" />
    <result column="staff" jdbcType="INTEGER" property="staff" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="del_date2" jdbcType="TIMESTAMP" property="delDate2" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, uid, p_score, p_msg, j_date, del_date, remark, r_id, expert_id, staff, add_date, 
    del_date2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from zc_dissertation_score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from zc_dissertation_score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.i84.earnpoint.model.ZcDissertationScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zc_dissertation_score (id, uid, p_score, 
      p_msg, j_date, del_date, 
      remark, r_id, expert_id, 
      staff, add_date, del_date2
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{pScore,jdbcType=INTEGER}, 
      #{pMsg,jdbcType=VARCHAR}, #{jDate,jdbcType=TIMESTAMP}, #{delDate,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{rId,jdbcType=INTEGER}, #{expertId,jdbcType=INTEGER}, 
      #{staff,jdbcType=INTEGER}, #{addDate,jdbcType=TIMESTAMP}, #{delDate2,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.i84.earnpoint.model.ZcDissertationScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zc_dissertation_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="pScore != null">
        p_score,
      </if>
      <if test="pMsg != null">
        p_msg,
      </if>
      <if test="jDate != null">
        j_date,
      </if>
      <if test="delDate != null">
        del_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="rId != null">
        r_id,
      </if>
      <if test="expertId != null">
        expert_id,
      </if>
      <if test="staff != null">
        staff,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="delDate2 != null">
        del_date2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="pScore != null">
        #{pScore,jdbcType=INTEGER},
      </if>
      <if test="pMsg != null">
        #{pMsg,jdbcType=VARCHAR},
      </if>
      <if test="jDate != null">
        #{jDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate != null">
        #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rId != null">
        #{rId,jdbcType=INTEGER},
      </if>
      <if test="expertId != null">
        #{expertId,jdbcType=INTEGER},
      </if>
      <if test="staff != null">
        #{staff,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate2 != null">
        #{delDate2,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.i84.earnpoint.model.ZcDissertationScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zc_dissertation_score
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="pScore != null">
        p_score = #{pScore,jdbcType=INTEGER},
      </if>
      <if test="pMsg != null">
        p_msg = #{pMsg,jdbcType=VARCHAR},
      </if>
      <if test="jDate != null">
        j_date = #{jDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate != null">
        del_date = #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rId != null">
        r_id = #{rId,jdbcType=INTEGER},
      </if>
      <if test="expertId != null">
        expert_id = #{expertId,jdbcType=INTEGER},
      </if>
      <if test="staff != null">
        staff = #{staff,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate2 != null">
        del_date2 = #{delDate2,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.i84.earnpoint.model.ZcDissertationScore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zc_dissertation_score
    set uid = #{uid,jdbcType=INTEGER},
      p_score = #{pScore,jdbcType=INTEGER},
      p_msg = #{pMsg,jdbcType=VARCHAR},
      j_date = #{jDate,jdbcType=TIMESTAMP},
      del_date = #{delDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      r_id = #{rId,jdbcType=INTEGER},
      expert_id = #{expertId,jdbcType=INTEGER},
      staff = #{staff,jdbcType=INTEGER},
      add_date = #{addDate,jdbcType=TIMESTAMP},
      del_date2 = #{delDate2,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="selectDissertationScoreJDList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
		b.activity_id,
		u.name,
		a.id,
		b.p_no,
		u.pnum,
		b.dissetation_name,
		u2.`name` AS expertname,
		e.zpno,
		a.p_score,
		a.p_msg,
		date_format(a.j_date, '%Y-%m-%d %H:%i:%s') j_date,
		date_format(a.add_date, '%Y-%m-%d %H:%i:%s') add_date
	FROM
		zc_dissertation_score a
		INNER JOIN zc_dissertation_info b on a.r_id = b.id
		LEFT JOIN user_info u on b.uid = u.id
		LEFT JOIN  user_expert_info e ON a.expert_id = e.id  
    	LEFT JOIN  user_info u2 ON e.uid  = u2.id 
    where 1=1
	    <if test="dpno != null">
	        AND a.p_no = #{dpno}
	    </if>
	     <if test="name != null">
	        AND u.name = #{name}
	    </if>
	     <if test="pnum != null">
	        AND u.pnum = #{pnum}
	    </if>
	     <if test="title != null">
	        AND b.dissetation_name LIKE CONCAT(CONCAT('%', #{title} ), '%')
	    </if>
	     <if test="score != null">
	        AND a.p_score = #{score}
	    </if>
	    <if test="activityid != null">
	    	AND b.activity_id = #{activityid}
	    </if>
    </select>


  
  
     <select id="selectExpertDissertationInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	  SELECT
		c.zpno,
		a.p_no,
		b.p_score,
		b.id zjlwId,
		a.id lwId,
		c.id zjId
		FROM
		   zc_dissertation_info a 
		INNER JOIN zc_dissertation_score b ON a.id = b.r_id
		INNER JOIN user_expert_info c ON b.expert_id = c.id
		INNER JOIN zc_dissertation_info f on b.r_id=f.id
		, zc_activity_get d 
		WHERE
		 a.del_date IS NULL and d.activity_id = a.activity_id and d.s_state=1 AND d.uid=a.uid
		AND b.del_date IS NULL and (d.s_level!='初级' and d.s_level!='中级') and f.is_send=1 AND a.s_type_id=0
		<if test="activityId!=null">
		    AND a.activity_id=#{activityId,jdbcType=INTEGER}
		</if>
  </select>
  <!-- 选择已经分配任务的专家  -->
  <select id="selectHasAssignTaskExperts" resultType="com.i84.earnpoint.model.ExpertAssignWorkPo" parameterType="java.lang.Integer">
		SELECT * FROM
		(SELECT
			a.zpno,
			b.`name`,
			b.pnum,
			b.pwd,
			b.tel,
			a.company,
			count(*) lwnum
		FROM
			user_expert_info a
		INNER JOIN user_info b ON a.uid = b.id
		INNER JOIN zc_dissertation_score c ON c.expert_id = a.id
		WHERE a.del_date IS NULL AND b.del_date IS NULL AND c.del_date IS NULL
    GROUP BY zpno) exportMaterial
		WHERE lwnum>0
		
  </select>
  <!-- 删除所有论文分配的专家，但论文已分配并且专家已登录过的分配无法被删除  -->
  <update id="deleteAllAssignedExperts" parameterType="java.lang.Integer">
   UPDATE zc_dissertation_score a,user_expert_info b,zc_dissertation_info c SET a.del_date = CURRENT_TIMESTAMP
  WHERE a.expert_id = b.id AND a.r_id = c.id AND  b.login_times IS  NULL AND activity_id=#{activityId,jdbcType=INTEGER}
  <!-- UPDATE zc_dissertation_info a set a.del_date =now()  where   activity_id=#{activityId,jdbcType=INTEGER} -->
  
  </update>
  <!-- 查询某篇论文分配的专家数   -->
  
  <select  id="selectAssignCountBylwId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
     select count(*) from zc_dissertation_score
     where del_date is null and r_id = #{rId,jdbcType=INTEGER}
  </select>
  
  <update id="delectDissertationAssign" parameterType="com.i84.earnpoint.model.ZcDissertationScore">
      update zc_dissertation_score set del_date = CURRENT_TIMESTAMP
      WHERE r_id =#{rId,jdbcType=INTEGER} AND expert_id = #{expertId,jdbcType=INTEGER}
  </update>
  
  <select id="selectDissertationScore" resultType="java.lang.Integer" parameterType="java.lang.Integer">
      select sum(case when p_score is null then 0 else p_score end) from zc_dissertation_score where r_id=#{rId} and del_date is null
  </select>
  
  <select id="selectDissertationAssign" resultType="java.lang.Integer" parameterType="java.lang.Integer">
	<!-- 原有的sql 查询时会将两个专家都评分为不及格的情况查询出来，
		而实际需求则是：分配的专家均已打分，有且仅有一位给出不合格分数时，再次分配1位专家进行评审。
		更改人：邓祯 2017年5月10日15:53:43
	 -->
	<!-- select expert_id from zc_dissertation_score where del_date is null and r_id=#{rId} and (p_score = 0 or p_score = 4 or p_score IS NULL) -->
			SELECT
				expert_id
			FROM
				zc_dissertation_score
			WHERE
				del_date IS NULL
			AND r_id =#{rId}
			AND (p_score = 0 or p_score IS NULL)
			union 
			SELECT 
				expert_id
			FROM
				zc_dissertation_score 
			where 
			del_date IS NULL
			AND r_id =#{rId}
			AND p_score = 4
			GROUP BY p_score HAVING COUNT(*)=1
  </select>
  
    <select id="selectDissertationAssignId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
			SELECT
				id
			FROM
				zc_dissertation_score
			WHERE
				del_date IS NULL
			AND r_id =#{rId}
			AND (p_score = 0 or p_score IS NULL)
			union 
			SELECT 
				id
			FROM
				zc_dissertation_score 
			where 
			del_date IS NULL
			AND r_id =#{rId}
			AND p_score = 4
			GROUP BY p_score HAVING COUNT(*)=1
  </select>
  
  
  <update id="updateDissertationAssignId" parameterType="java.util.HashMap">
	  update zc_dissertation_score
		set del_date=SYSDATE()
			where id in 
	     <foreach collection="id" open="(" item="item" separator="," close=")">
	          #{item}
	     </foreach>
  
  </update>
  
    <update id="cloaseScore" parameterType="java.lang.Integer" > 
		UPDATE zc_dissertation_score AS ss
		SET ss.end_date = SYSDATE()
		WHERE
		  ss.end_date is null
		and
		    ss.r_id IN (
		        SELECT
		            d.id
		        FROM
		            zc_dissertation_info AS d,
		            zc_activity_get AS g
		        WHERE
		            d.is_send = 1
		        AND d.activity_id = #{aid}
		        AND d.del_date IS NULL
		        AND g.s_state = 1
		        AND g.del_date IS NULL
		        AND d.uid = g.uid
		    )      
  </update>
  
  
  
   <select id="getAllpaperByActivityId"  parameterType="java.lang.Integer" resultType="java.util.HashMap" >
        SELECT
            g.id as gid,
            d.*
        FROM
            zc_dissertation_info AS d,
            zc_activity_get AS g
        WHERE
            d.is_send = 1
        AND d.activity_id =  #{aid}
        AND d.del_date IS NULL
        AND g.s_state = 1
        AND g.del_date IS NULL
        AND d.uid = g.uid
  </select>
  
   <select id="getAllscoreByR_id"  parameterType="java.lang.Integer" resultType="java.util.HashMap" >
SELECT
* 
FROM
zc_dissertation_score as s
WHERE
s.r_id = #{rid}
  </select>
  
  
     <select id="getVnum"  parameterType="java.lang.Integer" resultType="java.lang.Integer" >
SELECT
     ifnull( AVG(ww.num) , 0)
FROM
    (
        SELECT
            u.id AS uid,
            count(1) AS num
        FROM
            expert_activity_info AS e,
            user_expert_info AS ue,
            zc_dissertation_score AS s,
            user_info AS u
        WHERE
            e.a_id = 1
        AND e.del_date IS NULL
        AND ue.del_date IS NULL
        AND e.expert_id = ue.id
        AND s.del_date IS NULL
        AND u.del_date IS NULL
        AND u.id = ue.uid
        AND s.expert_id = e.expert_id
        GROUP BY
            u.id
) as ww
  </select>
  
<select id="exportScoreAllListByAction"  resultType="com.i84.earnpoint.model.ScoreExportVo">
   
        SELECT
        	b.activity_id,
        	b2.`name` AS activity_name ,
            u.`name`,
            u.pnum,
            b.dissetation_name,
            u2.`name` AS expertname,
            e.zpno,
            a.p_score,
            a.p_msg,
            date_format(a.j_date, '%Y-%m-%d %H:%i:%s') j_date,
            date_format(a.add_date, '%Y-%m-%d %H:%i:%s') add_date,
            u.work_name
        FROM
            zc_dissertation_score a
        INNER JOIN zc_dissertation_info b ON a.r_id = b.id
        LEFT JOIN user_info u ON b.uid = u.id
        LEFT JOIN  user_expert_info e ON a.expert_id = e.id  
        LEFT JOIN  user_info u2 ON e.uid  = u2.id 
        LEFT JOIN zc_activity_info  b2 ON  b.activity_id=b2.id
        where
            1=1
       and b.activity_id = #{aid}

</select>
  
<select id="exportScoreList"  resultType="com.i84.earnpoint.model.ScoreExportVo">

    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
 
   SELECT
	u.`name`,
	u.pnum,
	b.dissetation_name,
  u2.`name` as expertname,
  d.p_score,
  d.p_msg
FROM
	zc_dissertation_info b,
	zc_dissertation_score d,
	user_expert_info e,
	user_info u,
	user_info u2
WHERE
	d.uid = u.id
and b.id = d.r_id
and u.id = d.uid
AND e.id = d.expert_id
and e.uid = u2.id
and d.id in
   -->	
		SELECT
			b.activity_id,
			b2.`name` AS activity_name,
		    u.name,
		    u.pnum,
		    b.dissetation_name,
		    u2.`name` AS expertname,
		    e.zpno,
		    a.p_score,
		    a.p_msg,
		    date_format(a.j_date, '%Y-%m-%d %H:%i:%s') j_date,
		    date_format(a.add_date, '%Y-%m-%d %H:%i:%s') add_date
		FROM
		    zc_dissertation_score a
		INNER JOIN zc_dissertation_info b ON a.r_id = b.id
		LEFT JOIN user_info u ON b.uid = u.id
		LEFT JOIN  user_expert_info e ON a.expert_id = e.id  
		LEFT JOIN  user_info u2 ON e.uid  = u2.id 
		LEFT JOIN zc_activity_info  b2 ON  b.activity_id=b2.id
		where
		a.id in
		<foreach close=")" collection="array" index="index" item="item" open="(" separator=",">
			  #{item}
		</foreach>

</select>

  <select id="exportAppraisalByAction"  resultType="com.i84.earnpoint.model.ScoreExportVo">
   
        SELECT
        	b.activity_id,
        	b2.`name` AS activity_name,
            u.`name`,
            u.pnum,
            b.dissetation_name,
            u2.`name` AS expertname,
            e.zpno,
            a.p_score,
            a.p_msg,
            date_format(a.j_date, '%Y-%m-%d %H:%i:%s') j_date,
            date_format(a.add_date, '%Y-%m-%d %H:%i:%s') add_date,
            u.work_name
        FROM
            zc_dissertation_score a
        INNER JOIN zc_dissertation_info b ON a.r_id = b.id
        LEFT JOIN user_info u ON b.uid = u.id
        LEFT JOIN  user_expert_info e ON a.expert_id = e.id  
        LEFT JOIN  user_info u2 ON e.uid  = u2.id 
        LEFT JOIN zc_activity_info  b2 ON  b.activity_id=b2.id
        where
            1=1
       and b.activity_id = #{aid}
       and a.p_score >0

</select>
</mapper>