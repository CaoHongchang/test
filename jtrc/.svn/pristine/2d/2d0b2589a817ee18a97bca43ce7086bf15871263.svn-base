<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.i84.earnpoint.mapper.DealBusinessInfoMapper">
  <resultMap id="BaseResultMap" type="com.i84.earnpoint.model.DealBusinessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pno" jdbcType="VARCHAR" property="pno" />
    <result column="business_id" jdbcType="INTEGER" property="businessId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="sstate" jdbcType="INTEGER" property="sstate" />
    <result column="s_date" jdbcType="TIMESTAMP" property="sDate" />
    <result column="s_uid" jdbcType="INTEGER" property="sUid" />
    <result column="sb_date" jdbcType="TIMESTAMP" property="sbDate" />
    <result column="s_msg" jdbcType="VARCHAR" property="sMsg" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="s_uid2" jdbcType="INTEGER" property="sUid2" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="s_type" jdbcType="INTEGER" property="sType" />
    <result column="del_date" jdbcType="TIMESTAMP" property="delDate" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, pno, business_id, uid, add_date, sstate, s_date, s_uid, sb_date, s_msg, parent_id, 
    s_uid2, remark, msg, s_type, del_date, type_name, enterprise_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from deal_business_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from deal_business_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.i84.earnpoint.model.DealBusinessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into deal_business_info (id, pno, business_id, 
      uid, add_date, sstate, 
      s_date, s_uid, sb_date, 
      s_msg, parent_id, s_uid2, 
      remark, msg, s_type, 
      del_date, type_name, enterprise_id
      )
    values (#{id,jdbcType=INTEGER}, #{pno,jdbcType=VARCHAR}, #{businessId,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER}, #{addDate,jdbcType=TIMESTAMP}, #{sstate,jdbcType=INTEGER}, 
      #{sDate,jdbcType=TIMESTAMP}, #{sUid,jdbcType=INTEGER}, #{sbDate,jdbcType=TIMESTAMP}, 
      #{sMsg,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{sUid2,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, #{sType,jdbcType=INTEGER}, 
      #{delDate,jdbcType=TIMESTAMP}, #{typeName,jdbcType=VARCHAR}, #{enterpriseId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.i84.earnpoint.model.DealBusinessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into deal_business_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pno != null">
        pno,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="sstate != null">
        sstate,
      </if>
      <if test="sDate != null">
        s_date,
      </if>
      <if test="sUid != null">
        s_uid,
      </if>
      <if test="sbDate != null">
        sb_date,
      </if>
      <if test="sMsg != null">
        s_msg,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sUid2 != null">
        s_uid2,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="sType != null">
        s_type,
      </if>
      <if test="delDate != null">
        del_date,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pno != null">
        #{pno,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sstate != null">
        #{sstate,jdbcType=INTEGER},
      </if>
      <if test="sDate != null">
        #{sDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sUid != null">
        #{sUid,jdbcType=INTEGER},
      </if>
      <if test="sbDate != null">
        #{sbDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sMsg != null">
        #{sMsg,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sUid2 != null">
        #{sUid2,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="sType != null">
        #{sType,jdbcType=INTEGER},
      </if>
      <if test="delDate != null">
        #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.i84.earnpoint.model.DealBusinessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update deal_business_info
    <set>
      <if test="pno != null">
        pno = #{pno,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sstate != null">
        sstate = #{sstate,jdbcType=INTEGER},
      </if>
      <if test="sDate != null">
        s_date = #{sDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sUid != null">
        s_uid = #{sUid,jdbcType=INTEGER},
      </if>
      <if test="sbDate != null">
        sb_date = #{sbDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sMsg != null">
        s_msg = #{sMsg,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sUid2 != null">
        s_uid2 = #{sUid2,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="sType != null">
        s_type = #{sType,jdbcType=INTEGER},
      </if>
      <if test="delDate != null">
        del_date = #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.i84.earnpoint.model.DealBusinessInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update deal_business_info
    set pno = #{pno,jdbcType=VARCHAR},
      business_id = #{businessId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      add_date = #{addDate,jdbcType=TIMESTAMP},
      sstate = #{sstate,jdbcType=INTEGER},
      s_date = #{sDate,jdbcType=TIMESTAMP},
      s_uid = #{sUid,jdbcType=INTEGER},
      sb_date = #{sbDate,jdbcType=TIMESTAMP},
      s_msg = #{sMsg,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      s_uid2 = #{sUid2,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      s_type = #{sType,jdbcType=INTEGER},
      del_date = #{delDate,jdbcType=TIMESTAMP},
      type_name = #{typeName,jdbcType=VARCHAR},
      enterprise_id = #{enterpriseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <insert id="insertDealBusiness" keyProperty="id" parameterType="java.util.HashMap" useGeneratedKeys="true">
   
    insert into deal_business_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pno != null">
        pno,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="sstate != null">
        sstate,
      </if>
      <if test="sDate != null">
        s_date,
      </if>
      <if test="sUid != null">
        s_uid,
      </if>
      <if test="sbDate != null">
        sb_date,
      </if>
      <if test="sMsg != null">
        s_msg,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sUid2 != null">
        s_uid2,
      </if>
      <if test="remark != null">
        remark,
      </if>
       <if test="sType != null">
        s_type,
      </if>
       <if test="typeName != null">
        type_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pno != null">
        #{pno,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sstate != null">
        #{sstate,jdbcType=INTEGER},
      </if>
      <if test="sDate != null">
        #{sDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sUid != null">
        #{sUid,jdbcType=INTEGER},
      </if>
      <if test="sbDate != null">
        #{sbDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sMsg != null">
        #{sMsg,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sUid2 != null">
        #{sUid2,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sType != null">
        #{sType,jdbcType=INTEGER},
      </if>
       <if test="typeName != null">
       #{typeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
   <update id="updateDealBusiness" parameterType="java.util.HashMap">
 
    update deal_business_info
    <set>
      <if test="pno != null">
        pno = #{pno,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sstate != null">
        sstate = #{sstate,jdbcType=INTEGER},
      </if>
      <if test="sDate != null">
        s_date = #{sDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sUid != null">
        s_uid = #{sUid,jdbcType=INTEGER},
      </if>
      <if test="sbDate != null">
        sb_date = #{sbDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sMsg != null">
        s_msg = #{sMsg,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sUid2 != null">
        s_uid2 = #{sUid2,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
 
<select id="selectYwslList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    select a.id,a.parent_id as parentId,a.pno as slbh,c.name as ywlx,concat(b.name,case when a.type_name is not null  then CONCAT('(',a.type_name,')') else '' end ) as ywmc,b.obj_id as ywdx,
    <!-- 业务受理 -->
    d.name as sqr,
	d.work_name as ygdw,a.add_date as sqsj, a.s_date as slsj,
	CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它' end  as slzt,
a.s_uid,
	<!-- 关联业务经办人 审核-->
	e.username as zdglywjbr,
	f.username as ywjbr,
	CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它' end  as glywjbrshzt,
	a.s_msg as glyejbrshyj,
	 <!-- 宏业公司 审核-->
	 e.username as zdhygsshr,
	 case 
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它' end  as hygsshzt,
	a.s_msg as hygsshyj,
	<!-- 相关部门审核 -->
	 e.username as zdxgbmshr,
	  CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它'  end  as xgbmshzt,
	 a.s_msg as xgbmshyj,
	 <!-- 领导审核 -->
	  e.username as zdldshr ,
	  CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它' end  as ldshzt,
	 a.s_msg as bhyj
	 
	 from deal_business_info a 
	left JOIN business_info b on a.business_id=b.id
	left JOIN type_info c on c.id=b.type_id
	left JOIN user_info d on d.id=a.uid
	LEFT JOIN t_user e on e.userId=a.s_uid
	left join t_user f on f.userId=a.s_uid2
	where a.del_date is null 
	and b.del_date is null 
	and c.del_date is null 
	and d.del_date is null
	and e.del_date is null 
	and f.del_date is null   
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.username like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if>   
  </select>
  
  <!-- 关联业务经办人 -->
   <select id="selectYwslByGlywjbList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
      SELECT * from(
    select a.id,a.parent_id as parentId,a.pno as slbh,c.name as ywlx,
    concat(b.name,case when a.type_name is not null  then CONCAT('(',a.type_name,')') else '' end ) as ywmc,b.obj_id as ywdx,
     d.name as sqr,
	d.work_name as ygdw,a.add_date as sqsj, a.s_date as slsj,
    e.realName as zdglywjbr,
	f.realName as ywjbr,
	CASE
	WHEN a.sstate = 0 THEN '已受理'
	WHEN a.sstate = 1 THEN '驳回'
	WHEN a.sstate = 2 THEN '已审核'
	WHEN a.sstate = 3 THEN '审核失败'
	WHEN a.sstate = 4 THEN '未审核'
	WHEN a.sstate = 5 THEN '办结'
	ELSE '其它' end  as glywjbrshzt,
		a.s_msg as glyejbrshyj
		 from deal_business_info a 
	INNER JOIN business_info b on a.business_id=b.id
	INNER JOIN type_info c on c.id=b.type_id
	INNER JOIN user_info d on d.id=a.uid
	INNER JOIN t_user e on e.userId=a.s_uid
	left join t_user f on f.userId=a.s_uid2
	where a.del_date is null 
	and b.del_date is null 
	and c.del_date is null 
	and d.del_date is null
	and e.del_date is null 
	and f.del_date is null
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if>   
    UNION ALL
 select  a.id,
          a.parent_id as parentId,
          a.pno as slbh,
          c.name as ywlx,
          concat(b.name,case when a.type_name is not null  then CONCAT('(',a.type_name,')') else '' end ) as ywmc,
          b.obj_id as ywdx,
           f.name as sqr,
	      '' as ygdw,a.add_date as sqsj, a.s_date as slsj,
          e.realName as zdglywjbr,
	      g.realName as ywjbr,
					CASE
					WHEN a.sstate = 0 THEN '已受理'
					WHEN a.sstate = 1 THEN '驳回'
					WHEN a.sstate = 2 THEN '已审核'
					WHEN a.sstate = 3 THEN '审核失败'
					WHEN a.sstate = 4 THEN '未审核'
					WHEN a.sstate = 5 THEN '办结'
					ELSE '其它' end  as glywjbrshzt,
					a.s_msg as glyejbrshyj 
 from deal_business_info a 
INNER  JOIN business_info b on a.business_id=b.id  
INNER  JOIN type_info c on c.id=b.type_id
INNER JOIN enterprise_info f on f.id=a.enterprise_id
INNER JOIN t_user e on e.userId=a.s_uid
left join t_user g on g.userId=a.s_uid2
where  a.del_date is null and b.del_date is null  and c.del_date is null  and f.del_date is null and e.del_date is null and g.del_date is null
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
      ) d order by d.sqsj asc
   </select>
  
  <!-- 宏业公司 -->
  <select id="selectYwslByHyList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  
   SELECT * from(
    select a.id,a.parent_id as parentId,a.pno as slbh,c.name as ywlx,concat(b.name,case when a.type_name is not null  then CONCAT('(',a.type_name,')') else '' end ) as ywmc,b.obj_id as ywdx,
      d.name as sqr,
	  d.work_name as ygdw,a.add_date as sqsj, a.s_date as slsj,
     e.realName as zdhygsshr,
	 case 
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它' end  as hygsshzt,
	a.s_msg as hygsshyj
	 from deal_business_info a 
	INNER JOIN business_info b on a.business_id=b.id
	INNER JOIN type_info c on c.id=b.type_id
	INNER JOIN user_info d on d.id=a.uid
	INNER JOIN t_user e on e.userId=a.s_uid
	left join t_user f on f.userId=a.s_uid2
	where a.del_date is null and b.del_date IS NULL and c.del_date IS NULL and d.del_date IS NULL and e.del_date IS NULL  and f.del_date IS NULL
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
   ORDER BY a.sb_date desc  
   ) t GROUP BY slbh
   UNION ALL
select * from (SELECT
	a.id,
	a.parent_id AS parentId,
	a.pno AS slbh,
	c. NAME AS ywlx,
	concat(
		b. NAME,
		CASE
	WHEN a.type_name IS NOT NULL THEN
		CONCAT('(', a.type_name, ')')
	ELSE
		''
	END
	) AS ywmc,
	b.obj_id AS ywdx,
	f. NAME AS sqr,
	'' AS ygdw,
	a.add_date AS sqsj,
	a.s_date AS slsj,
	e.realName AS zdhygsshr,
	CASE
WHEN a.sstate = 0 THEN
	'已受理'
WHEN a.sstate = 1 THEN
	'驳回'
WHEN a.sstate = 2 THEN
	'已审核'
WHEN a.sstate = 3 THEN
	'审核失败'
WHEN a.sstate = 4 THEN
	'未审核'
WHEN a.sstate = 5 THEN
	'办结'
ELSE
	'其它'
END AS hygsshzt,
 a.s_msg AS hygsshyj
FROM
	deal_business_info a
   INNER JOIN business_info b ON a.business_id = b.id
	INNER JOIN type_info c ON c.id = b.type_id
	INNER JOIN enterprise_info f ON f.id = a.enterprise_id
	LEFT JOIN t_user e ON e.userId = a.s_uid
WHERE
	a.del_date IS NULL and b.del_date IS NULL and c.del_date IS NULL and f.del_date IS NULL 
<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
   ORDER BY a.sb_date desc  
   ) t GROUP BY slbh  order by sqsj
  </select>
  
  <select id="selectYwslByXgList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  
   SELECT * from(
    select a.id,a.parent_id as parentId,a.pno as slbh,c.name as ywlx,concat(b.name,case when a.type_name is not null  then CONCAT('(',a.type_name,')') else '' end ) as ywmc,b.obj_id as ywdx,
      d.name as sqr,
	  d.work_name as ygdw,a.add_date as sqsj, a.s_date as slsj,
    e.realName as zdxgbmshr,
	  CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它'  end  as xgbmshzt,
	 a.s_msg as xgbmshyj
	
	 from deal_business_info a 
	INNER JOIN business_info b on a.business_id=b.id
	INNER JOIN type_info c on c.id=b.type_id
	INNER JOIN user_info d on d.id=a.uid
	INNER JOIN t_user e on e.userId=a.s_uid
	left join t_user f on f.userId=a.s_uid2
	where a.del_date is null and b.del_date IS NULL and c.del_date IS NULL and d.del_date IS NULL and e.del_date IS NULL  and f.del_date IS NULL
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
   ORDER BY a.sb_date desc  
   ) t GROUP BY slbh
   UNION ALL
select * from (SELECT
	a.id,
	a.parent_id AS parentId,
	a.pno AS slbh,
	c. NAME AS ywlx,
	concat(
		b. NAME,
		CASE
	WHEN a.type_name IS NOT NULL THEN
		CONCAT('(', a.type_name, ')')
	ELSE
		''
	END
	) AS ywmc,
	b.obj_id AS ywdx,
	f. NAME AS sqr,
	'' AS ygdw,
	a.add_date AS sqsj,
	a.s_date AS slsj,
e.realName as zdxgbmshr,
	  CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它'  end  as xgbmshzt,
	 a.s_msg as xgbmshyj

FROM
	deal_business_info a
   INNER JOIN business_info b ON a.business_id = b.id
	INNER JOIN type_info c ON c.id = b.type_id
	INNER JOIN enterprise_info f ON f.id = a.enterprise_id
	LEFT JOIN t_user e ON e.userId = a.s_uid
WHERE
	a.del_date IS NULL and b.del_date IS NULL and c.del_date IS NULL and f.del_date IS NULL 
<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
   ORDER BY a.sb_date desc  
   ) t GROUP BY slbh order by sqsj
  </select>
  
 
  <select id="selectYwslByLdList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  
   SELECT * from(
    select a.id,a.parent_id as parentId,a.pno as slbh,c.name as ywlx,concat(b.name,case when a.type_name is not null  then CONCAT('(',a.type_name,')') else '' end ) as ywmc,b.obj_id as ywdx,
      d.name as sqr,
	  d.work_name as ygdw,a.add_date as sqsj, a.s_date as slsj,
     e.realName as zdldshr ,
	  CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它' end  as ldshzt,
	 a.s_msg as bhyj
	
	 from deal_business_info a 
	INNER JOIN business_info b on a.business_id=b.id
	INNER JOIN type_info c on c.id=b.type_id
	INNER JOIN user_info d on d.id=a.uid
	INNER JOIN t_user e on e.userId=a.s_uid
	left join t_user f on f.userId=a.s_uid2
	where a.del_date is null and b.del_date IS NULL and c.del_date IS NULL and d.del_date IS NULL and e.del_date IS NULL  and f.del_date IS NULL
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
   ORDER BY a.sb_date desc  
   ) t GROUP BY slbh
   UNION ALL
select * from (SELECT
	a.id,
	a.parent_id AS parentId,
	a.pno AS slbh,
	c. NAME AS ywlx,
	concat(
		b. NAME,
		CASE
	WHEN a.type_name IS NOT NULL THEN
		CONCAT('(', a.type_name, ')')
	ELSE
		''
	END
	) AS ywmc,
	b.obj_id AS ywdx,
	f. NAME AS sqr,
	'' AS ygdw,
	a.add_date AS sqsj,
	a.s_date AS slsj,
 e.realName as zdldshr ,
	  CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它' end  as ldshzt,
	 a.s_msg as bhyj

FROM
	deal_business_info a
   INNER JOIN business_info b ON a.business_id = b.id
	INNER JOIN type_info c ON c.id = b.type_id
	INNER JOIN enterprise_info f ON f.id = a.enterprise_id
	LEFT JOIN t_user e ON e.userId = a.s_uid
WHERE
	a.del_date IS NULL and b.del_date IS NULL and c.del_date IS NULL and f.del_date IS NULL 
<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
   ORDER BY a.sb_date desc  
   ) t GROUP BY slbh order by sqsj
  </select>
  
  <!-- 业务受理 -->
  <select id="selectYwslshList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select a.id,
          a.parent_id as parentId,
          a.pno as slbh,
          c.name as ywlx,
          concat(b.name,case when length(a.type_name)>0   then CONCAT('(',a.type_name,')') else '' end ) as ywmc,
          b.obj_id as ywdx,
          d.name as sqr,
          e.realName as slr,
	        d.work_name as ygdw,
          a.add_date as sqsj,
          a.s_date as slsj,
						CASE
					WHEN a.sstate = 0 THEN '已受理'
					WHEN a.sstate = 1 THEN '驳回'
					WHEN a.sstate = 2 THEN '已审核'
					WHEN a.sstate = 3 THEN '审核失败'
					WHEN a.sstate = 4 THEN '未审核'
					WHEN a.sstate = 5 THEN '办结'
					ELSE '其它' end  as slzt,
					a.s_uid	 
	 from deal_business_info a 
	INNER  JOIN business_info b on a.business_id=b.id
	INNER JOIN type_info c on c.id=b.type_id
	INNER JOIN user_info d on d.id=a.uid
	LEFT JOIN t_user e ON e.userId = a.s_uid

	where a.del_date is null 
	and  b.del_date is null 
	and c.del_date is null 
	and d.del_date is null 
	and e.del_date is null
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
   <if test="username2 !=null and username2 !=''">
    and d.name like CONCAT('%',#{username2},'%')  <!-- 申请人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if>   
   UNION ALL
 select a.id,
          a.parent_id as parentId,
          a.pno as slbh,
          c.name as ywlx,
          concat(b.name,case when a.type_name is not null  then CONCAT('(',a.type_name,')') else '' end ) as ywmc,
          b.obj_id as ywdx,
          f.name as sqr,
          e.realName as slr,
	        '' as ygdw,
          a.add_date as sqsj,
          a.s_date as slsj,
						CASE
					WHEN a.sstate = 0 THEN '已受理'
					WHEN a.sstate = 1 THEN '驳回'
					WHEN a.sstate = 2 THEN '已审核'
					WHEN a.sstate = 3 THEN '审核失败'
					WHEN a.sstate = 4 THEN '未审核'
					WHEN a.sstate = 5 THEN '办结'
					ELSE '其它' end  as slzt,
					a.s_uid	 
 from deal_business_info a 
INNER  JOIN business_info b on a.business_id=b.id  
INNER  JOIN type_info c on c.id=b.type_id
INNER JOIN enterprise_info f on f.id=a.enterprise_id
LEFT JOIN t_user e ON e.userId = a.s_uid
where  a.del_date is null and b.del_date is null  and c.del_date is null  and f.del_date is null and e.del_date is null
	<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
	</if>
	<if test="pno !=null and pno !=''">
    and a.pno like CONCAT('%',#{pno},'%')
   </if>
   <if test="username !=null and username !=''">
    and e.realName like CONCAT('%',#{username},'%')  <!-- 受理人 -->
   </if>
    <if test="username2 !=null and username2 !=''">
    and  f.name like CONCAT('%',#{username2},'%')  <!-- 申请人 -->
   </if>
   <if test="sstate !=null and sstate !=''">
    and a.sstate =#{sstate,jdbcType=INTEGER}
   </if> 
   order by sqsj <!-- 9.14确定用升序。 -->
  </select>
  
   <select id="selectYwslMsg" parameterType="java.util.HashMap" resultType="java.util.HashMap">
      select 
    <include refid="Base_Column_List" />
    from deal_business_info 
    where id = #{id,jdbcType=INTEGER}   and del_date is null
   </select>
   
   <select id="selectIsYwsl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
      select 
 count(1) total
    from deal_business_info 
    where pno = #{pno,jdbcType=INTEGER}  
   </select>
   
<select id="selectExportYwsl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT
    ifnull(b. NAME, '') AS gryhxm,
	ifnull(d.`name`, '') AS qymc,
	ifnull(b.work_name, '') AS ygdw,
	ifnull(e.`name`, '') AS ywmc,
	<!-- ifnull(e.remark, '') AS wtms, -->
	(
		SELECT
			ifnull(count(1), 0)
		FROM
			business_info
		WHERE
			business_info.id = a.business_id
	) AS tpsl,
	ifnull(b. NAME, '') AS sbr,
	a.add_date AS sqsj,
	ifnull(f.realName, '') AS slczr,
	a.s_date AS slsj,
	a.msg wtms

 from deal_business_info a 
LEFT JOIN user_info b on b.id=a.uid
INNER JOIN hy_business_info c on c.user_id=b.id
LEFT JOIN enterprise_info d on d.id=c.enterprise_id
LEFT JOIN business_info e on e.id=a.business_id
LEFT JOIN t_user as f on f.userId=a.s_uid
where  a.del_date is null and c.del_date is null 
<if test="pno != null and pno !='' ">
and a.pno= #{pno,jdbcType=VARCHAR}  
</if>
<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
</if>

union

SELECT
	ifnull(d. NAME, '') AS gryhxm,
	ifnull(d.`name`, '') AS qymc,
	 '' AS ygdw,
	ifnull(e.`name`, '') AS ywmc,
	<!-- ifnull(e.remark, '') AS wtms, -->
	(
		SELECT
			ifnull(count(1), 0)
		FROM
			business_info
		WHERE
			business_info.id = a.business_id
	) AS tpsl,
	ifnull(d. NAME, '') AS sbr,
	a.add_date AS sqsj,
	ifnull(f.realName, '') AS slczr,
	a.s_date AS slsj,
	a.msg wtms
FROM
	deal_business_info a
INNER JOIN hy_business_info c ON c.enterprise_id = a.enterprise_id
LEFT JOIN enterprise_info d ON d.id = c.enterprise_id
LEFT JOIN business_info e ON e.id = a.business_id
LEFT JOIN t_user AS f ON f.userId = a.s_uid
WHERE
	a.del_date IS NULL
AND c.del_date IS NULL
<if test="pno != null and pno !='' ">
and a.pno= #{pno,jdbcType=VARCHAR}  
</if>
<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
</if>
</select>

<select id="selectExportYwslList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
SELECT
	a.id,
	ifnull(a.s_msg,'') AS glywjbryj,
	ifnull(f.realName,'') AS glywjbrshczr,
	a.sb_date AS glywjbrshsj,
	
	ifnull(a.s_msg,'') AS xgbmyj,
	ifnull(f.realName,'') AS xgbmczr,
	a.sb_date AS xgbmshsj,
	ifnull(a.s_msg,'') AS ldyj,
	ifnull(f.realName,'') AS ldczr,
	a.sb_date AS ldsj

 from deal_business_info a
LEFT JOIN t_user as f on f.userId=a.s_uid2 <!--9.14： 取实际进行审核的人 而非指定人。所以取s_uid2-->
where  a.del_date is null
<if test="pno != null and pno !='' ">
and a.pno= #{pno,jdbcType=VARCHAR}  
</if>
<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
</if>
<if test="parentId != null and parentId !=''  ">
       and a.parent_id = #{parentId,jdbcType=INTEGER}
</if>

</select>

<select id="selectExportYwslHy" parameterType="java.util.HashMap" resultType="java.util.HashMap">
SELECT
	a.id,
	
	ifnull(a.s_msg,'') AS hygsyj,
	ifnull(f.realName,'') AS hygsczr,
	a.sb_date AS hygsshsj
	
 from deal_business_info a
LEFT JOIN t_user as f on f.userId=a.s_uid2
 where a.del_date is null
<if test="pno != null and pno !='' ">
and a.pno= #{pno,jdbcType=VARCHAR}  
</if>
<if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
</if>
<if test="parentId != null and parentId !=''  ">
       and a.parent_id = #{parentId,jdbcType=INTEGER}
</if>
order by id desc  LIMIT 1
</select>



<select id="selectYwView" parameterType="java.util.HashMap" resultType="java.util.HashMap">

select a.pno,b.id as ywid, c.`name` as ywlx,b.`name` as ywlr,d.`name`as sqr,a.add_date as sqsj,a.msg wtms from deal_business_info a
LEFT JOIN business_info b on b.id=a.business_id
LEFT JOIN type_info c on c.id=b.type_id
LEFT JOIN user_info d on d.id=a.uid
where a.id = #{id,jdbcType=INTEGER} and  a.del_date is null and b.del_date is null and c.del_date is null
<if test="pno != null and pno !='' ">
and a.pno= #{pno,jdbcType=VARCHAR}  
</if>
</select>

<select id="selectYwViewZt" parameterType="java.util.HashMap" resultType="java.util.HashMap">

   

SELECT
	a.id,
	a.pno,
	a.business_id,
	a.uid,
	a.add_date,
	CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它'
END zt,
 a.s_date,
 a.s_uid,
 a.sb_date,
 a.s_msg,
 a.parent_id,
 a.s_uid2,
 a.remark,
 b.realname AS zdUserName,
 c.realname

FROM
	deal_business_info a
LEFT JOIN t_user b ON b.userId = a.s_uid
LEFT JOIN t_user c ON c.userId = a.s_uid2
  
  where a.pno= #{pno,jdbcType=VARCHAR}  
  and  a.del_date is null 
 
  <if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
  </if>
  <!-- 宏业公司 -->
  <if test="isHy !=null and isHy !=''">
  order by a.id desc  LIMIT 1
  
  </if>
</select>

<select id="selectYwViewZtById" parameterType="java.util.HashMap" resultType="java.util.HashMap">

   

SELECT
	a.id,
	a.pno,
	a.business_id,
	a.uid,
	a.add_date,
	CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它'
END zt,
 a.s_date,
 a.s_uid,
 a.sb_date,
 a.s_msg,
 a.parent_id,
 a.s_uid2,
 a.remark,
 b.realname AS zdUserName,
 c.realname,
 a.msg wtms
FROM
	deal_business_info a
LEFT JOIN t_user b ON b.userId = a.s_uid
LEFT JOIN t_user c ON c.userId = a.s_uid2
  
  where a.id= #{id,jdbcType=VARCHAR}  
  and  a.del_date is null 
 
  <if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
  </if>

</select>


<select id="selectYwViewZtList" parameterType="java.util.HashMap" resultType="java.util.HashMap">

SELECT
	a.id,
	a.pno,
	a.business_id,
	a.uid,
	a.add_date,
	CASE
WHEN a.sstate = 0 THEN '已受理'
WHEN a.sstate = 1 THEN '驳回'
WHEN a.sstate = 2 THEN '已审核'
WHEN a.sstate = 3 THEN '审核失败'
WHEN a.sstate = 4 THEN '未审核'
WHEN a.sstate = 5 THEN '办结'
ELSE '其它'
END zt,
 a.s_date,
 a.s_uid,
 a.sb_date,
 a.s_msg,
 a.parent_id,
 a.s_uid2,
 a.remark,
 b.realName AS zdUserName,
 c.realName as userName
FROM
	deal_business_info a
LEFT JOIN t_user b ON b.userId = a.s_uid
LEFT JOIN t_user c ON c.userId = a.s_uid2
  
  where a.pno= #{pno,jdbcType=VARCHAR} and  a.del_date is null 
  <if test="remark !=null and remark !=''">
	 and a.remark= #{remark,jdbcType=VARCHAR}
  </if>
</select>

  <update id="updateState" parameterType="java.util.HashMap">
   
    update deal_business_info
    <set>
     <!--  <if test="pno != null">
        pno = #{pno,jdbcType=VARCHAR},
      </if> -->
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sstate != null">
        sstate = #{sstate,jdbcType=INTEGER},
      </if>
      <if test="sDate != null">
        s_date = #{sDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sUid != null">
        s_uid = #{sUid,jdbcType=INTEGER},
      </if>
      <if test="sbDate != null">
        sb_date = #{sbDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sMsg != null">
        s_msg = #{sMsg,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sUid2 != null">
        s_uid2 = #{sUid2,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where pno = #{pno,jdbcType=INTEGER}
  </update>
</mapper>