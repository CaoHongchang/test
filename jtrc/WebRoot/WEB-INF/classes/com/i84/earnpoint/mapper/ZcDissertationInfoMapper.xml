<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.i84.earnpoint.mapper.ZcDissertationInfoMapper">
  <resultMap id="BaseResultMap" type="com.i84.earnpoint.model.ZcDissertationInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="s_type_id" jdbcType="INTEGER" property="sTypeId" />
    <result column="s_level" jdbcType="INTEGER" property="sLevel" />
    <result column="dissetation_name" jdbcType="VARCHAR" property="dissetationName" />
    <result column="j_date" jdbcType="TIMESTAMP" property="jDate" />
    <result column="j_msg" jdbcType="VARCHAR" property="jMsg" />
    <result column="is_send" jdbcType="INTEGER" property="isSend" />
    <result column="f_num" jdbcType="INTEGER" property="fNum" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="del_date" jdbcType="TIMESTAMP" property="delDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="over_date" jdbcType="TIMESTAMP" property="overDate" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="r_name" jdbcType="VARCHAR" property="rName" />
    <result column="p_no" jdbcType="VARCHAR" property="pNo" />
    <result column="d_id" jdbcType="VARCHAR" property="d_id" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, uid, s_type_id, s_level, dissetation_name, j_date, j_msg, is_send, f_num, add_date, 
    del_date, remark, activity_id, over_date, url, r_name, p_no, d_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from zc_dissertation_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from zc_dissertation_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.i84.earnpoint.model.ZcDissertationInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zc_dissertation_info (id, uid, s_type_id, 
      s_level, dissetation_name, j_date, 
      j_msg, is_send, f_num, 
      add_date, del_date, remark, 
      activity_id, over_date, url, 
      r_name, p_no , d_id)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{sTypeId,jdbcType=INTEGER}, 
      #{sLevel,jdbcType=INTEGER}, #{dissetationName,jdbcType=VARCHAR}, #{jDate,jdbcType=TIMESTAMP}, 
      #{jMsg,jdbcType=VARCHAR}, #{isSend,jdbcType=INTEGER}, #{fNum,jdbcType=INTEGER}, 
      #{addDate,jdbcType=TIMESTAMP}, #{delDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{activityId,jdbcType=INTEGER}, #{overDate,jdbcType=TIMESTAMP}, #{url,jdbcType=VARCHAR}, 
      #{rName,jdbcType=VARCHAR}, #{pNo,jdbcType=VARCHAR} , #{d_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.i84.earnpoint.model.ZcDissertationInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into zc_dissertation_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="sTypeId != null">
        s_type_id,
      </if>
      <if test="sLevel != null">
        s_level,
      </if>
      <if test="dissetationName != null">
        dissetation_name,
      </if>
      <if test="jDate != null">
        j_date,
      </if>
      <if test="jMsg != null">
        j_msg,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
      <if test="fNum != null">
        f_num,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="delDate != null">
        del_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="overDate != null">
        over_date,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="rName != null">
        r_name,
      </if>
      <if test="pNo != null">
        p_no,
      </if>
      <if test="d_id != null">
        d_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="sTypeId != null">
        #{sTypeId,jdbcType=INTEGER},
      </if>
      <if test="sLevel != null">
        #{sLevel,jdbcType=INTEGER},
      </if>
      <if test="dissetationName != null">
        #{dissetationName,jdbcType=VARCHAR},
      </if>
      <if test="jDate != null">
        #{jDate,jdbcType=TIMESTAMP},
      </if>
      <if test="jMsg != null">
        #{jMsg,jdbcType=VARCHAR},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=INTEGER},
      </if>
      <if test="fNum != null">
        #{fNum,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate != null">
        #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="overDate != null">
        #{overDate,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="rName != null">
        #{rName,jdbcType=VARCHAR},
      </if>
      <if test="pNo != null">
        #{pNo,jdbcType=VARCHAR},
      </if>
      <if test="d_id != null">
        #{d_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.i84.earnpoint.model.ZcDissertationInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zc_dissertation_info
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="sTypeId != null">
        s_type_id = #{sTypeId,jdbcType=INTEGER},
      </if>
      <if test="sLevel != null">
        s_level = #{sLevel,jdbcType=INTEGER},
      </if>
      <if test="dissetationName != null">
        dissetation_name = #{dissetationName,jdbcType=VARCHAR},
      </if>
      <if test="jDate != null">
        j_date = #{jDate,jdbcType=TIMESTAMP},
      </if>
      <if test="jMsg != null">
        j_msg = #{jMsg,jdbcType=VARCHAR},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=INTEGER},
      </if>
      <if test="fNum != null">
        f_num = #{fNum,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate != null">
        del_date = #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="overDate != null">
        over_date = #{overDate,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="rName != null">
        r_name = #{rName,jdbcType=VARCHAR},
      </if>
      <if test="pNo != null">
        p_no = #{pNo,jdbcType=VARCHAR},
      </if>
      <if test="d_id != null">
        d_id =  #{d_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.i84.earnpoint.model.ZcDissertationInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update zc_dissertation_info
    set uid = #{uid,jdbcType=INTEGER},
      s_type_id = #{sTypeId,jdbcType=INTEGER},
      s_level = #{sLevel,jdbcType=INTEGER},
      dissetation_name = #{dissetationName,jdbcType=VARCHAR},
      j_date = #{jDate,jdbcType=TIMESTAMP},
      j_msg = #{jMsg,jdbcType=VARCHAR},
      is_send = #{isSend,jdbcType=INTEGER},
      f_num = #{fNum,jdbcType=INTEGER},
      add_date = #{addDate,jdbcType=TIMESTAMP},
      del_date = #{delDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=INTEGER},
      over_date = #{overDate,jdbcType=TIMESTAMP},
      url = #{url,jdbcType=VARCHAR},
      r_name = #{rName,jdbcType=VARCHAR},
      p_no = #{pNo,jdbcType=VARCHAR},
      d_id =  #{d_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
      <select id="queryList" parameterType="java.util.Map" resultType="java.util.Map">
SELECT
	d.id,
	d.s_type_id,
	d.s_level,
	d.dissetation_name,
	d.j_date,
	d.j_msg,
	d.is_send,
	d.f_num,
	d.p_no,
	d.remark,
	U1. NAME AS u_name,
	U1.pnum AS pum,
	d.url,
	d.activity_id,
	d.add_date,
	d.d_id,
	<!-- 2018年1月2日16:25:53   添加用户的身份证字段，解决导出时身份证为空的情况 -->
	U1.pnum,
	group_concat(
		CAST(e.expert_id AS CHAR) SEPARATOR ' '
	) pid
FROM
	zc_dissertation_info d
LEFT JOIN user_info U1 ON U1.id = d.uid
LEFT JOIN zc_dissertation_score e ON d.id = e.r_id
WHERE
	1 = 1
AND d.del_date IS NULL
    <if test="activityId != null">
        and activity_id = #{activityId,jdbcType=INTEGER}
      </if>
    <if test="id != null">
        and d.id=#{id,jdbcType=INTEGER}
      </if>
      <if test="uid != null">
        and d.uid=#{uid,jdbcType=INTEGER}
      </if>
      <if test="u1_name != null">
        and U1.name like concat('%',#{u1_name},'%')
      </if>
      <if test="pnum != null">
        and U1.pnum like concat('%',#{pnum},'%')
      </if>
      <if test="s_type_id != null">
        and d.s_type_id like concat('%',#{s_type_id},'%')
      </if>
      <if test="s_level != null">
        and d.s_level like concat('%',#{s_level},'%')
      </if>
      <if test="dissetation_name != null">
        and d.dissetation_name like concat('%',#{dissetation_name},'%')
      </if>
      <if test="sb_date != null">
        and date_format(d.j_date, '%Y-%m-%d %H:%i:%S') &gt;= #{j_b_date,jdbcType=VARCHAR}
      </if>
      <if test="se_date != null">
        and date_format(d.j_date, '%Y-%m-%d %H:%i:%S') &lt; #{j_e_date,jdbcType=VARCHAR}
      </if>
      <if test="j_msg != null">
        and d.j_msg =like concat('%',#{j_msg},'%')
      </if>
      <if test="is_send != null">
        and is_send=#{is_send,jdbcType=INTEGER}
      </if>
      <if test="f_num != null">
        and f_num=#{fNum,jdbcType=INTEGER}
      </if>
		<if test="lwIds!=null">
		  AND b.id IN 
		  <foreach collection="lwIds" item="item" open="(" close=")" separator=",">
		      #{item,jdbcType=INTEGER}
		  </foreach>
		</if>
		GROUP BY
	d.id
  </select>
  <select id="selectSBDissertaionInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT
		b.*
		FROM
			zc_activity_get a
		INNER JOIN zc_dissertation_info b ON a.activity_id = b.activity_id
		AND a.uid = b.uid
		WHERE
			a.del_date IS NULL
		AND b.del_date IS NULL  and (a.s_level!='初级' and a.s_level!='中级') and is_send=1 AND b.s_type_id = 0
		<if test="activityId!=null">
		  AND b.activity_id = #{activityId,jdbcType=INTEGER}
		</if>
		<if test="uid!=null">
		  AND b.uid = #{uid,jdbcType=INTEGER}
		</if>
  </select>
  <!-- 查找论文，论文成绩，专家信息 -->
  <select id="selectDissertationExpertAssignInfos" resultType="java.util.HashMap" parameterType="java.util.HashMap">
    <!-- 原有的sql 查询时会将两个专家都评分为不及格的情况查询出来，
		而实际需求则是：分配的专家均已打分，有且仅有一位给出不合格分数时，再次分配1位专家进行评审。
		更改人：邓祯 2017年5月10日16:44:00 -->
    <!--SELECT
        b.id,
		a.id lwId,
		b.expert_id,
		a.p_no,
		c.zpno,
		b.p_score,
		c.init_time,
		c.other_time,
		c.login_date
		FROM
			zc_dissertation_info a
		LEFT JOIN zc_dissertation_score b ON a.id = b.r_id
		LEFT JOIN user_expert_info c ON b.expert_id = c.id
		WHERE
			a.del_date IS NULL AND b.del_date IS NULL
		AND (
			b.p_score IS NULL
			OR b.p_score = 0
			OR b.p_score = 4 
		)
		<if test="activityId!=null">
		 AND a.activity_id = #{activityId,jdbcType=INTEGER}
		</if>
		-->
	SELECT
        b.id,
		a.id lwId,
		b.expert_id,
		a.p_no,
		c.zpno,
		b.p_score,
		c.init_time,
		c.other_time,
		c.login_date
		FROM
			zc_dissertation_info a
		left JOIN zc_dissertation_score b ON a.id = b.r_id
		left JOIN user_expert_info c ON b.expert_id = c.id
		WHERE
			a.del_date IS NULL AND b.del_date IS NULL
		AND (
			b.p_score IS NULL
			OR b.p_score = 0
		)
		<if test="activityId!=null">
		 AND a.activity_id = #{activityId,jdbcType=INTEGER}
		</if>
	UNION
 	SELECT
        b.id,
		a.id lwId,
		b.expert_id,
		a.p_no,
		c.zpno,
		b.p_score,
		c.init_time,
		c.other_time,
		c.login_date
		FROM
			zc_dissertation_info a
		left JOIN zc_dissertation_score b ON a.id = b.r_id
		left JOIN user_expert_info c ON b.expert_id = c.id
		WHERE
			a.del_date IS NULL AND b.del_date IS NULL
		AND  b.p_score = 4
		<if test="activityId!=null">
		 AND a.activity_id = #{activityId,jdbcType=INTEGER}
		</if>
		GROUP BY b.p_score HAVING COUNT(*)=1
		
  </select>
  <!-- 根据论文编号查找论文信息 -->
  <select id="selectDissertationInfoByPno" parameterType="java.lang.String" resultMap="BaseResultMap">
      select 
      <include refid="Base_Column_List"/>
      from zc_dissertation_info
      where p_no = #{pNo,jdbcType=VARCHAR}
      and del_date is null
      order by id desc 
      limit 0,1
  </select>
  
  <select id="selectMaxId" resultType="java.lang.Integer">
  select max(id)  from zc_dissertation_info
  </select>
  
  
  <update id="lwfpcs" parameterType="java.util.HashMap">
	  update zc_dissertation_info 
		set f_num=#{f_num,jdbcType=INTEGER}
		where id=#{id,jdbcType=INTEGER}
  </update>
  
  <select id="getlwfpcs" parameterType="java.lang.Integer" resultType="HashMap">
  select id,f_num 
  	from zc_dissertation_info 
  	where id=#{id,jdbcType=INTEGER}
  </select>
</mapper>