<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.i84.earnpoint.mapper.BgActivityUserInfoMapper">
  <resultMap id="BaseResultMap" type="com.i84.earnpoint.model.BgActivityUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="candidate_id" jdbcType="VARCHAR" property="candidateId" />
    <result column="bg_enterprise_place_id" jdbcType="INTEGER" property="bgEnterprisePlaceId" />
    <result column="is_state" jdbcType="CHAR" property="isState" />
    <result column="rs" jdbcType="VARCHAR" property="rs" />
    <result column="up_state" jdbcType="CHAR" property="upState" />
    <result column="up" jdbcType="VARCHAR" property="up" />
    <result column="is_pay" jdbcType="INTEGER" property="isPay" />
    <result column="del_date" jdbcType="TIMESTAMP" property="delDate" />
    <result column="bg_apply_register_id" jdbcType="INTEGER" property="bgApplyRegisterId" />
    <result column="bg_work_experience_id" jdbcType="INTEGER" property="bgWorkExperienceId" />
    <result column="bg_study_experience_id" jdbcType="INTEGER" property="bgStudyExperienceId" />
    <result column="ss_content" jdbcType="VARCHAR" property="ssContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    id, user_id, candidate_id, bg_enterprise_place_id, is_state, rs, up_state, up, is_pay, 
    del_date, bg_apply_register_id, bg_work_experience_id, bg_study_experience_id
  </sql>
  <select id="selectByExample" parameterType="com.i84.earnpoint.model.BgActivityUserInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bg_activity_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    select 
    *
    from bg_activity_user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    delete from bg_activity_user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.i84.earnpoint.model.BgActivityUserInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    delete from bg_activity_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.i84.earnpoint.model.BgActivityUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    insert into bg_activity_user_info (id, user_id, candidate_id, 
      bg_enterprise_place_id, is_state, rs, 
      up_state, up, is_pay, del_date, 
      bg_apply_register_id, bg_work_experience_id, 
      bg_study_experience_id)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{candidateId,jdbcType=VARCHAR}, 
      #{bgEnterprisePlaceId,jdbcType=INTEGER}, #{isState,jdbcType=CHAR}, #{rs,jdbcType=VARCHAR}, 
      #{upState,jdbcType=CHAR}, #{up,jdbcType=VARCHAR}, #{isPay,jdbcType=INTEGER}, #{delDate,jdbcType=TIMESTAMP}, 
      #{bgApplyRegisterId,jdbcType=INTEGER}, #{bgWorkExperienceId,jdbcType=INTEGER}, 
      #{bgStudyExperienceId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.i84.earnpoint.model.BgActivityUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    insert into bg_activity_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="candidateId != null">
        candidate_id,
      </if>
      <if test="bgEnterprisePlaceId != null">
        bg_enterprise_place_id,
      </if>
      <if test="isState != null">
        is_state,
      </if>
      <if test="rs != null">
        rs,
      </if>
      <if test="upState != null">
        up_state,
      </if>
      <if test="up != null">
        up,
      </if>
      <if test="isPay != null">
        is_pay,
      </if>
      <if test="delDate != null">
        del_date,
      </if>
      <if test="bgApplyRegisterId != null">
        bg_apply_register_id,
      </if>
      <if test="bgWorkExperienceId != null">
        bg_work_experience_id,
      </if>
      <if test="bgStudyExperienceId != null">
        bg_study_experience_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="candidateId != null">
        #{candidateId,jdbcType=VARCHAR},
      </if>
      <if test="bgEnterprisePlaceId != null">
        #{bgEnterprisePlaceId,jdbcType=INTEGER},
      </if>
      <if test="isState != null">
        #{isState,jdbcType=CHAR},
      </if>
      <if test="rs != null">
        #{rs,jdbcType=VARCHAR},
      </if>
      <if test="upState != null">
        #{upState,jdbcType=CHAR},
      </if>
      <if test="up != null">
        #{up,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null">
        #{isPay,jdbcType=INTEGER},
      </if>
      <if test="delDate != null">
        #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bgApplyRegisterId != null">
        #{bgApplyRegisterId,jdbcType=INTEGER},
      </if>
      <if test="bgWorkExperienceId != null">
        #{bgWorkExperienceId,jdbcType=INTEGER},
      </if>
      <if test="bgStudyExperienceId != null">
        #{bgStudyExperienceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.i84.earnpoint.model.BgActivityUserInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    select count(*) from bg_activity_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    update bg_activity_user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.candidateId != null">
        candidate_id = #{record.candidateId,jdbcType=VARCHAR},
      </if>
      <if test="record.bgEnterprisePlaceId != null">
        bg_enterprise_place_id = #{record.bgEnterprisePlaceId,jdbcType=INTEGER},
      </if>
      <if test="record.isState != null">
        is_state = #{record.isState,jdbcType=CHAR},
      </if>
      <if test="record.rs != null">
        rs = #{record.rs,jdbcType=VARCHAR},
      </if>
      <if test="record.upState != null">
        up_state = #{record.upState,jdbcType=CHAR},
      </if>
      <if test="record.up != null">
        up = #{record.up,jdbcType=VARCHAR},
      </if>
      <if test="record.isPay != null">
        is_pay = #{record.isPay,jdbcType=INTEGER},
      </if>
      <if test="record.delDate != null">
        del_date = #{record.delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bgApplyRegisterId != null">
        bg_apply_register_id = #{record.bgApplyRegisterId,jdbcType=INTEGER},
      </if>
      <if test="record.bgWorkExperienceId != null">
        bg_work_experience_id = #{record.bgWorkExperienceId,jdbcType=INTEGER},
      </if>
      <if test="record.bgStudyExperienceId != null">
        bg_study_experience_id = #{record.bgStudyExperienceId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    update bg_activity_user_info
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      candidate_id = #{record.candidateId,jdbcType=VARCHAR},
      bg_enterprise_place_id = #{record.bgEnterprisePlaceId,jdbcType=INTEGER},
      is_state = #{record.isState,jdbcType=CHAR},
      rs = #{record.rs,jdbcType=VARCHAR},
      up_state = #{record.upState,jdbcType=CHAR},
      up = #{record.up,jdbcType=VARCHAR},
      is_pay = #{record.isPay,jdbcType=INTEGER},
      del_date = #{record.delDate,jdbcType=TIMESTAMP},
      bg_apply_register_id = #{record.bgApplyRegisterId,jdbcType=INTEGER},
      bg_work_experience_id = #{record.bgWorkExperienceId,jdbcType=INTEGER},
      bg_study_experience_id = #{record.bgStudyExperienceId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.i84.earnpoint.model.BgActivityUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    update bg_activity_user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="candidateId != null">
        candidate_id = #{candidateId,jdbcType=VARCHAR},
      </if>
      <if test="bgEnterprisePlaceId != null">
        bg_enterprise_place_id = #{bgEnterprisePlaceId,jdbcType=INTEGER},
      </if>
      <if test="isState != null">
        is_state = #{isState,jdbcType=CHAR},
      </if>
      <if test="rs != null">
        rs = #{rs,jdbcType=VARCHAR},
      </if>
      <if test="upState != null">
        up_state = #{upState,jdbcType=CHAR},
      </if>
      <if test="up != null">
        up = #{up,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null">
        is_pay = #{isPay,jdbcType=INTEGER},
      </if>
      <if test="delDate != null">
        del_date = #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bgApplyRegisterId != null">
        bg_apply_register_id = #{bgApplyRegisterId,jdbcType=INTEGER},
      </if>
      <if test="bgWorkExperienceId != null">
        bg_work_experience_id = #{bgWorkExperienceId,jdbcType=INTEGER},
      </if>
      <if test="bgStudyExperienceId != null">
        bg_study_experience_id = #{bgStudyExperienceId,jdbcType=INTEGER},
      </if>
      <if test="ksh != null">
        ksh = #{ksh,jdbcType=VARCHAR},
      </if>
      <if test="zwh != null">
        zwh = #{zwh,jdbcType=VARCHAR},
      </if>
      <if test="zkzh != null">
        zkzh = #{zkzh,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        apply_type = #{applyType,jdbcType=VARCHAR},
      </if>
      <if test="exportState != null">
        export_state = #{exportState,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.i84.earnpoint.model.BgActivityUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    update bg_activity_user_info
    set user_id = #{userId,jdbcType=INTEGER},
      candidate_id = #{candidateId,jdbcType=VARCHAR},
      bg_enterprise_place_id = #{bgEnterprisePlaceId,jdbcType=INTEGER},
      is_state = #{isState,jdbcType=CHAR},
      rs = #{rs,jdbcType=VARCHAR},
      up_state = #{upState,jdbcType=CHAR},
      up = #{up,jdbcType=VARCHAR},
      is_pay = #{isPay,jdbcType=INTEGER},
      del_date = #{delDate,jdbcType=TIMESTAMP},
      bg_apply_register_id = #{bgApplyRegisterId,jdbcType=INTEGER},
      bg_work_experience_id = #{bgWorkExperienceId,jdbcType=INTEGER},
      bg_study_experience_id = #{bgStudyExperienceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="selectListBySelective" resultType="java.util.HashMap" parameterType="java.util.HashMap">
    SELECT
    bepi.id AS gwyqid,
    baui.id AS id,
    baui.user_id AS uid,
    bai.pname AS hdmc,
    pi.pno AS gwdm,
    pi. NAME AS gwmc,
    ei.id AS dwid,
    ei.pno AS dwpno,
    ei. NAME AS dwmc,
    ei1.NAME AS bksjdw,
    baui.candidate_id AS ksbh,
    bafri.id AS userid,
    bafri.card_number AS sfzh,
    bafri. NAME AS xm,
    baui.is_state AS shzt,
    baui.rs AS shyj,
    baui.up_state AS sszt,
    baui.up AS ssyj,
    baui.ss_content AS ssnr,
    baai.se_date AS shjssj,
    baai.ss_end_date AS ssjssj,
    bafri.photo,
    pi.pno AS gwdm
FROM
    bg_activity_user_info baui
INNER JOIN bg_enterprise_place_info bepi ON baui.bg_enterprise_place_id = bepi.id
INNER JOIN bg_activity_enterprise bae ON bepi.activity_enterprise_id = bae.id
INNER JOIN bg_activity_info bai ON bae.activity_id = bai.id
INNER JOIN bg_activity_arg_info baai ON baai.activity_id = bai.id
INNER JOIN place_info pi ON bepi.place_id = pi.id
INNER JOIN enterprise_info ei ON bae.enterprise_id = ei.id
LEFT JOIN bg_apply_for_register_info bafri ON bafri.id = baui.bg_apply_register_id
LEFT JOIN enterprise_info ei1 ON ei1.id = ei.parent_id
WHERE
    baui.is_pay = 1
AND (
    baui.apply_type IS NULL
    OR baui.apply_type = '已处理'
)
      <if test="activity_id!=null and activity_id!=''">
         and bae.activity_id = #{activity_id,jdbcType=INTEGER}
      </if>
      <if test="activity_enterprise_id!=null and activity_enterprise_id!=''">
         and bepi.activity_enterprise_id  = #{activity_enterprise_id,jdbcType=INTEGER}
      </if>
      <if test="place_id!=null and place_id!=''">
         and bepi.place_id  = #{place_id,jdbcType=INTEGER}
      </if>
      <if test="value!=null and value!=''">
         and (bafri.card_number like CONCAT('%',#{value,jdbcType=VARCHAR},'%') or bafri.name like CONCAT('%',#{value,jdbcType=VARCHAR},'%'))
      </if>
      <if test="is_state!=null and is_state!=''">
      	<if test="is_state=='-1'">
      	and (baui.is_state = '' or baui.is_state is null or baui.is_state ='待审核')
      	</if>
      	<if test="is_state!='-1'">
      	and baui.is_state = #{is_state,jdbcType=CHAR}
      	</if>
         
      </if>
      <if test="up_state!=null and up_state!=''">
      	<if test="up_state=='-1'">
         	and (baui.up_state = '' OR baui.up_state IS NULL OR baui.up_state = '未申诉')
      	</if>
      	<if test="up_state!='-1'">
         	and baui.up_state = #{up_state,jdbcType=CHAR}
      	</if>
      </if>  
      <if test="list!=null and list!=''">
         and ei.id in
           <foreach item="item" index="index" collection="list" open="("
            separator="," close=")">
            #{item}  
         </foreach> 
      </if>    
  </select>
  
   
   <select id="queryEnterpriseInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  		SELECT ei.pno as pno,ei.name as bkdw,ei1.name as dwmc from enterprise_info ei LEFT JOIN enterprise_info ei1 ON ei1.id = ei.parent_id  where ei.id = #{id,jdbcType=INTEGER}
  </select>
  	<select id="queryUserInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  		SELECT * from bg_apply_for_register_info where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="queryUserStudyInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  		SELECT * from bg_study_experience_info where user_id = #{user_id,jdbcType=INTEGER} and enterprise_place_id = #{enterprise_place_id,jdbcType=INTEGER}
  </select>
  
   <select id="queryUserWorkInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  		SELECT * from bg_work_experience_info where user_id = #{user_id,jdbcType=INTEGER} and enterprise_place_id = #{enterprise_place_id,jdbcType=INTEGER}
  </select> 
     <select id="queryGwyqInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  		SELECT * from bg_enterprise_place_info where id = #{id,jdbcType=INTEGER}
  </select>
       <select id="queryShSsInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  		SELECT * from bg_activity_user_info where user_id = #{user_id,jdbcType=INTEGER} and bg_enterprise_place_id = #{enterprise_place_id,jdbcType=INTEGER}
  </select>
  
   <select id="queryShFailedList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT baui.id AS id,bai.pname AS hdmc, bafri.card_number AS sfzh, bafri.name AS xm,baupi.order_id AS ddh,baupi.order_no AS fkjyh,baupi.p_date AS fksj,
		baupi.m AS m,baui.apply_type AS sqlx, ei.`name` AS sqdw,pi.name as gwmc,baui.rs as shyj,baui.export_state as dczt,baupi.remark as remark,baui.is_state as is_state,baui.up_state as up_state
		FROM bg_activity_user_info baui
		LEFT JOIN bg_enterprise_place_info bepi ON baui.bg_enterprise_place_id = bepi.id
		LEFT JOIN bg_activity_enterprise bae ON bepi.activity_enterprise_id = bae.id
		LEFT JOIN bg_activity_info bai ON bae.activity_id = bai.id
		LEFT JOIN place_info pi ON bepi.place_id = pi.id
		LEFT JOIN enterprise_info ei ON bae.enterprise_id = ei.id
		
		LEFT JOIN bg_apply_for_register_info bafri ON bafri.id = baui.bg_apply_register_id
		LEFT JOIN bg_activity_user_pay_info baupi ON (baupi.enterprise_place_id = baui.bg_enterprise_place_id AND baupi.sfzh = bafri.card_number)
		where (baui.is_state = '审核不通过' or baui.is_state='修改信息') AND (baui.up_state IS NULL OR baui.up_state = '申诉失败') and baupi.order_no is not null
		<!-- 
		<if test="type==null or type==''">
         and baui.export_state IS NULL 
      </if>
       -->
		<if test="type!=null and type!=''">
         and baui.apply_type IS NOT NULL 
      </if> 
      <if test="activity_id!=null and activity_id!=''">
         and bai.id = #{activity_id,jdbcType=INTEGER}
      </if> 
      <if test="export_state!=null and export_state!=''">
            <if test="export_state == 'null'">
         		and (baui.export_state is NULL or baui.export_state = '')
      		</if>	
      		 <if test="export_state != 'null'">
         		and baui.export_state = #{export_state,jdbcType=VARCHAR}
      		</if>
         
      </if>	
      <if test="cs_param!=null and cs_param!=''">
         and (bafri.name like CONCAT('%',#{cs_param,jdbcType=VARCHAR},'%') or bafri.card_number like CONCAT('%',#{cs_param,jdbcType=VARCHAR},'%'))
      </if>	 
  </select>
  
  <select id="queryShFailedList2" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT baui.id AS id,bai.pname AS hdmc, bafri.card_number AS sfzh, bafri.name AS xm,
		<!-- baupi.order_id AS ddh,baupi.order_no AS fkjyh,baupi.p_date AS fksj,baupi.m AS m, -->
		baui.apply_type AS sqlx, ei.`name` AS sqdw,ei1.`name` AS sqdw1,pi.name as gwmc,baui.rs as shyj,baui.export_state as dczt
		FROM bg_activity_user_info baui
		LEFT JOIN bg_enterprise_place_info bepi ON baui.bg_enterprise_place_id = bepi.id
		LEFT JOIN bg_activity_enterprise bae ON bepi.activity_enterprise_id = bae.id
		LEFT JOIN bg_activity_info bai ON bae.activity_id = bai.id
		LEFT JOIN place_info pi ON bepi.place_id = pi.id
		LEFT JOIN enterprise_info ei ON bae.enterprise_id = ei.id
		LEFT JOIN enterprise_info ei1 ON ei1.id = ei.parent_id
		LEFT JOIN bg_apply_for_register_info bafri ON baui.bg_apply_register_id = bafri.id
		<!-- LEFT JOIN bg_apply_for_register_info bafri ON (bepi.id = bafri.enterprise_place_id AND baui.user_id = bafri.user_id) -->
		<!-- LEFT JOIN bg_activity_user_pay_info baupi ON (baupi.enterprise_place_id = baui.bg_enterprise_place_id AND baupi.sfzh = bafri.card_number) -->
		where (baui.apply_type IS NOT NULL and baui.apply_type != '') and bai.remark='是'
		<!-- 
		<if test="type==null or type==''">
         and baui.export_state IS NULL 
      </if>
       
		<if test="type!=null and type!=''">
         and baui.apply_type IS NOT NULL 
      </if> 
      -->
      <if test="activity_id!=null and activity_id!=''">
         and bai.id = #{activity_id,jdbcType=INTEGER}
      </if> 
      
      <if test="cs_param!=null and cs_param!=''">
         and (bafri.name like CONCAT('%',#{cs_param,jdbcType=VARCHAR},'%') or bafri.card_number like CONCAT('%',#{cs_param,jdbcType=VARCHAR},'%'))
      </if>	 
  </select>
  <!-- AND baai.de_date > #{date,jdbcType=VARCHAR} -->
  <select id="activityList" resultType="java.util.HashMap" parameterType="java.lang.String">
  	SELECT bai.id AS hdid, bai.pname AS hdname FROM bg_activity_info bai INNER JOIN bg_activity_arg_info baai ON bai.id = baai.activity_id
  	
  </select>
  
  <select id="userEnterprises" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  	SELECT * FROM  bg_activity_enterprise WHERE enterprise_id in
  	<foreach item="item" index="index" collection="list" open="("
            separator="," close=")">
            #{item}  
         </foreach> 
  </select> 
  
  <select id="userEnterpriseId" resultType="java.util.HashMap" parameterType="java.lang.Integer">
  	SELECT * FROM t_user WHERE userId = #{userId,jdbcType=INTEGER} 
  </select>
  
  <select id="userEnterpriseIds" resultType="java.util.HashMap" parameterType="java.lang.Integer">
  	SELECT * FROM enterprise_info WHERE parent_id = #{id,jdbcType=INTEGER} 
  </select>
 
   <select id="userEnterpriseAll" resultType="java.util.HashMap" >
    SELECT * FROM enterprise_info  
  </select>
  
  <select id="activityAllUserList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  	SELECT baui.id AS id, baui.ksh AS ksh, baui.zwh AS zwh,baui.zkzh AS zkzh,bafri.`name` AS xm,
  	bafri.card_number AS sfzh,ei.c_code AS code, pi.pno AS gwdm,bafri.photo AS tx,bepi.paper_style AS kjlx,ei.pno AS pno
	FROM bg_activity_user_info baui 
	INNER JOIN bg_apply_for_register_info bafri ON baui.bg_apply_register_id = bafri.id
	INNER JOIN bg_enterprise_place_info bepi ON bepi.id = baui.bg_enterprise_place_id
	INNER JOIN bg_activity_enterprise bae ON bepi.activity_enterprise_id = bae.id
	INNER JOIN enterprise_info ei ON bae.enterprise_id = ei.id
	INNER JOIN place_info pi ON bepi.place_id= pi.id
	WHERE bae.activity_id = #{activityId,jdbcType=INTEGER} 
  </select>
  
  <!--  AND baui.is_state = '已审核' -->
  <select id="userList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  	SELECT baui.id AS id, baui.ksh AS ksh, baui.zwh AS zwh,baui.zkzh AS zkzh,bafri.`name` AS xm,
  	bafri.card_number AS sfzh,ei.c_code AS code, pi.pno AS gwdm,bafri.photo AS tx,bepi.paper_style AS kjlx,ei.pno AS pno
	FROM bg_activity_user_info baui 
	INNER JOIN bg_apply_for_register_info bafri ON baui.bg_apply_register_id = bafri.id
	INNER JOIN bg_enterprise_place_info bepi ON bepi.id = baui.bg_enterprise_place_id
	INNER JOIN bg_activity_enterprise bae ON bepi.activity_enterprise_id = bae.id
	INNER JOIN enterprise_info ei ON bae.enterprise_id = ei.id
	INNER JOIN place_info pi ON bepi.place_id= pi.id
	WHERE bae.activity_id = #{activityId,jdbcType=INTEGER}  AND (baui.is_state = '审核通过' OR baui.up_state = '申诉成功') AND bepi.is_start= '是' 
	<if test="kjlx!=null and kjlx!=''">
         and bepi.paper_style = #{kjlx,jdbcType=VARCHAR}
      </if>
	  <if test="ksh!=null and ksh!=''">
         and baui.ksh = #{ksh,jdbcType=VARCHAR}
      </if> 
      ORDER BY baui.zwh asc
  </select>
  
   <select id="userListByzkz" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  	SELECT bai.pname as bkhddm,ei.name as dwdm,pi.name as gwdm, baui.id AS id, baui.ksh AS ksh, baui.zwh AS zwh,baui.zkzh AS zkzh,bafri.`name` AS xm,
  	bafri.card_number AS sfzh,ei.c_code AS code, pi.pno AS gwdm1,baui.user_id as user_id,baui.bg_enterprise_place_id as bg_enterprise_place_id,ei.pno AS pno
	FROM bg_activity_user_info baui 
	INNER JOIN bg_apply_for_register_info bafri ON baui.bg_apply_register_id = bafri.id
	INNER JOIN bg_enterprise_place_info bepi ON bepi.id = baui.bg_enterprise_place_id
	INNER JOIN bg_activity_enterprise bae ON bepi.activity_enterprise_id = bae.id
	INNER JOIN enterprise_info ei ON bae.enterprise_id = ei.id
	INNER JOIN place_info pi ON bepi.place_id= pi.id
	INNER JOIN bg_activity_info bai on bai.id =bae.activity_id
	WHERE  
	<if test="zkzh!=null and zkzh!=''">
         baui.zkzh = #{zkzh,jdbcType=VARCHAR}
      </if>
	  
  </select>
  
  
    <select id="kshList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  	SELECT DISTINCT baui.ksh
	FROM bg_activity_user_info baui 
	INNER JOIN bg_apply_for_register_info bafri ON baui.bg_apply_register_id = bafri.id
	INNER JOIN bg_enterprise_place_info bepi ON bepi.id = baui.bg_enterprise_place_id
	INNER JOIN bg_activity_enterprise bae ON bepi.activity_enterprise_id = bae.id
	INNER JOIN enterprise_info ei ON bae.enterprise_id = ei.id
	INNER JOIN place_info pi ON bepi.place_id= pi.id
	WHERE bae.activity_id = #{activityId,jdbcType=INTEGER} AND baui.ksh IS NOT NULL
	order by baui.ksh
  </select>
    <select id="activityenterpriseList" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
SELECT
    bae.id activity_enterprise_id,
    ei.`name`
FROM
    bg_activity_enterprise bae
INNER JOIN enterprise_info ei ON bae.enterprise_id = ei.id
WHERE
    bae.activity_id =  #{activity_id,jdbcType=INTEGER}
      <if test="list!=null and list!=''">
         and ei.id in
           <foreach item="item" index="index" collection="list" open="("
            separator="," close=")">
            #{item}  
         </foreach> 
      </if> 
  </select>  
  
  
  
    <select id="activityenterpriseplaceList" resultType="java.util.HashMap" parameterType="java.lang.Integer">
SELECT
    pi.id pid,
    pi.`name`
FROM
    bg_enterprise_place_info bepi
INNER JOIN place_info pi ON bepi.place_id = pi.id
WHERE
    bepi.activity_enterprise_id = #{id,jdbcType=INTEGER}
  
  </select>
  
  <update id="updateInfo" parameterType="com.i84.earnpoint.model.BgActivityUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 12 09:45:19 CST 2016.
    -->
    UPDATE bg_activity_user_info set is_state = '审核不通过'
	where is_pay = 1
	AND (
	apply_type IS NULL
	OR apply_type = '已处理'
	)
	AND is_state = '修改信息'
  </update>
</mapper>