<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.i84.earnpoint.mapper.ResidenceInfoMapper">
  <resultMap id="BaseResultMap" type="com.i84.earnpoint.model.ResidenceInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="residence_no" jdbcType="VARCHAR" property="residenceNo" />
    <result column="rel_name" jdbcType="VARCHAR" property="relName" />
    <result column="other_adr" jdbcType="VARCHAR" property="otherAdr" />
    <result column="blood" jdbcType="VARCHAR" property="blood" />
    <result column="stature" jdbcType="INTEGER" property="stature" />
    <result column="xy_name" jdbcType="VARCHAR" property="xyName" />
    <result column="by_state" jdbcType="VARCHAR" property="byState" />
    <result column="service_adr" jdbcType="VARCHAR" property="serviceAdr" />
    <result column="pro_name" jdbcType="VARCHAR" property="proName" />
    <result column="h_pro" jdbcType="VARCHAR" property="hPro" />
    <result column="police" jdbcType="VARCHAR" property="police" />
    <result column="r_date" jdbcType="TIMESTAMP" property="rDate" />
    <result column="r_adr" jdbcType="VARCHAR" property="rAdr" />
    <result column="org_adr" jdbcType="VARCHAR" property="orgAdr" />
    <result column="q_date" jdbcType="TIMESTAMP" property="qDate" />
    <result column="q_adr" jdbcType="VARCHAR" property="qAdr" />
    <result column="c_name" jdbcType="VARCHAR" property="cName" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="del_date" jdbcType="TIMESTAMP" property="delDate" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, residence_no, rel_name, other_adr, blood, stature, xy_name, by_state, service_adr, 
    pro_name, h_pro, police, r_date, r_adr, org_adr, q_date, q_adr, c_name, add_date, 
    del_date, uid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from residence_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from residence_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.i84.earnpoint.model.ResidenceInfo" >
  	
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into residence_info (id, residence_no, rel_name, 
      other_adr, blood, stature, 
      xy_name, by_state, service_adr, 
      pro_name, h_pro, police, 
      r_date, r_adr, org_adr, 
      q_date, q_adr, c_name, 
      add_date, del_date, uid
      )
    values (#{id,jdbcType=INTEGER}, #{residenceNo,jdbcType=VARCHAR}, #{relName,jdbcType=VARCHAR}, 
      #{otherAdr,jdbcType=VARCHAR}, #{blood,jdbcType=VARCHAR}, #{stature,jdbcType=INTEGER}, 
      #{xyName,jdbcType=VARCHAR}, #{byState,jdbcType=VARCHAR}, #{serviceAdr,jdbcType=VARCHAR}, 
      #{proName,jdbcType=VARCHAR}, #{hPro,jdbcType=VARCHAR}, #{police,jdbcType=VARCHAR}, 
      #{rDate,jdbcType=TIMESTAMP}, #{rAdr,jdbcType=VARCHAR}, #{orgAdr,jdbcType=VARCHAR}, 
      #{qDate,jdbcType=TIMESTAMP}, #{qAdr,jdbcType=VARCHAR}, #{cName,jdbcType=VARCHAR}, 
      #{addDate,jdbcType=TIMESTAMP}, #{delDate,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.i84.earnpoint.model.ResidenceInfo" keyProperty="id" useGeneratedKeys="true">
  <!-- <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id"> 
        SELECT LAST_INSERT_ID() id
    </selectKey> -->
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into residence_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="residenceNo != null">
        residence_no,
      </if>
      <if test="relName != null">
        rel_name,
      </if>
      <if test="otherAdr != null">
        other_adr,
      </if>
      <if test="blood != null">
        blood,
      </if>
      <if test="stature != null">
        stature,
      </if>
      <if test="xyName != null">
        xy_name,
      </if>
      <if test="byState != null">
        by_state,
      </if>
      <if test="serviceAdr != null">
        service_adr,
      </if>
      <if test="proName != null">
        pro_name,
      </if>
      <if test="hPro != null">
        h_pro,
      </if>
      <if test="police != null">
        police,
      </if>
      <if test="rDate != null">
        r_date,
      </if>
      <if test="rAdr != null">
        r_adr,
      </if>
      <if test="orgAdr != null">
        org_adr,
      </if>
      <if test="qDate != null">
        q_date,
      </if>
      <if test="qAdr != null">
        q_adr,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="delDate != null">
        del_date,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="residenceNo != null">
        #{residenceNo,jdbcType=VARCHAR},
      </if>
      <if test="relName != null">
        #{relName,jdbcType=VARCHAR},
      </if>
      <if test="otherAdr != null">
        #{otherAdr,jdbcType=VARCHAR},
      </if>
      <if test="blood != null">
        #{blood,jdbcType=VARCHAR},
      </if>
      <if test="stature != null">
        #{stature,jdbcType=INTEGER},
      </if>
      <if test="xyName != null">
        #{xyName,jdbcType=VARCHAR},
      </if>
      <if test="byState != null">
        #{byState,jdbcType=VARCHAR},
      </if>
      <if test="serviceAdr != null">
        #{serviceAdr,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="hPro != null">
        #{hPro,jdbcType=VARCHAR},
      </if>
      <if test="police != null">
        #{police,jdbcType=VARCHAR},
      </if>
      <if test="rDate != null">
        #{rDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rAdr != null">
        #{rAdr,jdbcType=VARCHAR},
      </if>
      <if test="orgAdr != null">
        #{orgAdr,jdbcType=VARCHAR},
      </if>
      <if test="qDate != null">
        #{qDate,jdbcType=TIMESTAMP},
      </if>
      <if test="qAdr != null">
        #{qAdr,jdbcType=VARCHAR},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate != null">
        #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.i84.earnpoint.model.ResidenceInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update residence_info
    <set>
      <if test="residenceNo != null">
        residence_no = #{residenceNo,jdbcType=VARCHAR},
      </if>
      <if test="relName != null">
        rel_name = #{relName,jdbcType=VARCHAR},
      </if>
      <if test="otherAdr != null">
        other_adr = #{otherAdr,jdbcType=VARCHAR},
      </if>
      <if test="blood != null">
        blood = #{blood,jdbcType=VARCHAR},
      </if>
      <if test="stature != null">
        stature = #{stature,jdbcType=INTEGER},
      </if>
      <if test="xyName != null">
        xy_name = #{xyName,jdbcType=VARCHAR},
      </if>
      <if test="byState != null">
        by_state = #{byState,jdbcType=VARCHAR},
      </if>
      <if test="serviceAdr != null">
        service_adr = #{serviceAdr,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        pro_name = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="hPro != null">
        h_pro = #{hPro,jdbcType=VARCHAR},
      </if>
      <if test="police != null">
        police = #{police,jdbcType=VARCHAR},
      </if>
      <if test="rDate != null">
        r_date = #{rDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rAdr != null">
        r_adr = #{rAdr,jdbcType=VARCHAR},
      </if>
      <if test="orgAdr != null">
        org_adr = #{orgAdr,jdbcType=VARCHAR},
      </if>
      <if test="qDate != null">
        q_date = #{qDate,jdbcType=TIMESTAMP},
      </if>
      <if test="qAdr != null">
        q_adr = #{qAdr,jdbcType=VARCHAR},
      </if>
      <if test="cName != null">
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate != null">
        del_date = #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.i84.earnpoint.model.ResidenceInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update residence_info
    set residence_no = #{residenceNo,jdbcType=VARCHAR},
      rel_name = #{relName,jdbcType=VARCHAR},
      other_adr = #{otherAdr,jdbcType=VARCHAR},
      blood = #{blood,jdbcType=VARCHAR},
      stature = #{stature,jdbcType=INTEGER},
      xy_name = #{xyName,jdbcType=VARCHAR},
      by_state = #{byState,jdbcType=VARCHAR},
      service_adr = #{serviceAdr,jdbcType=VARCHAR},
      pro_name = #{proName,jdbcType=VARCHAR},
      h_pro = #{hPro,jdbcType=VARCHAR},
      police = #{police,jdbcType=VARCHAR},
      r_date = #{rDate,jdbcType=TIMESTAMP},
      r_adr = #{rAdr,jdbcType=VARCHAR},
      org_adr = #{orgAdr,jdbcType=VARCHAR},
      q_date = #{qDate,jdbcType=TIMESTAMP},
      q_adr = #{qAdr,jdbcType=VARCHAR},
      c_name = #{cName,jdbcType=VARCHAR},
      add_date = #{addDate,jdbcType=TIMESTAMP},
      del_date = #{delDate,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryResidenceIoInfo" parameterType="java.util.Map" resultType="java.util.Map">
       SELECT UMI.UID,
       			 UMI.PNO S_CODE,
                 UMI.DPNO P_NO,
                 UI.NAME,
                 UI.SEX,
                 UI.PNUM,
                 UI.TEL,
                 UMI.IS_S,
                 UI.SCHOOL,
                 UI.MAJOR,
                 UI.DPNO,
                 UI.ID,
                 rt.out_name,
                   rt.sign_name,
                rt.id rid
         FROM USER_MG_INFO UMI
				 INNER JOIN USER_INFO UI ON UI.ID = UMI.UID
         LEFT JOIN ARCHIVES_BASE_INFO ABI ON UMI.DPNO = ABI.P_NO 
         inner JOIN residence_info ri on ri.uid=UMI.UID
         LEFT JOIN residence_int_info  rt on ri.id=rt.residence_id  and rt.sign_name is null
         WHERE UMI.del_date IS NULL AND UI.del_date IS NULL
      <if test="p_no != null">
          AND ABI.P_NO = #{p_no,jdbcType=VARCHAR}
      </if>
        <if test="pnum != null">
	        AND UI.pnum = #{pnum}
	    </if>
	   
	    <if test="name!=null and name!=''">
	        AND UI.name like concat('%',#{name},'%')
	    </if>
	    <if test="age!=null and age!=''">
	        <choose>
	           <when test="age == 30">
	           	  AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=30
	           </when>
	           <when test="age == 40">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &gt;=31 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=40
	           </when>
	           <when test="age == 50">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &gt;=41 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=50
	           </when>
	           <otherwise>
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &gt;=51
	           </otherwise>
	        </choose>
	       
	    </if>
	     group by ABI.P_NO
	    order by rt.id desc
  </select>
  
   <select id="qryResidenceInfo" parameterType="java.util.Map" resultMap="BaseResultMap">
   	select 
    	<include refid="Base_Column_List" />
   	 from residence_info
    where 1=1 and uid = #{uid,jdbcType=INTEGER} limit 0,1
   </select>
   
 
    <select id="getHkxxList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			b.id uid,
			b.dpno,
			b.NAME,
			CASE b.sex
			when '0' then '男'
			when '1' then '女'
			ELSE b.sex END as sex,
			b.pnum,
			b.tel,
			b.work_name,
			(
				SELECT
					type
				FROM
					residence_his_info_new c
				WHERE
					c.residence_id = a.id
				ORDER BY
					c.add_date desc
				LIMIT 1
			) type,
			b.school,
			b.major
		from 
		residence_info a 
		INNER JOIN user_info b on a.uid=b.id
		where 1=1
      <if test="p_no != null">
          AND b.dpno = #{p_no,jdbcType=VARCHAR}
      </if>
        <if test="pnum != null">
	        AND b.pnum = #{pnum}
	    </if>
	   
	    <if test="name!=null and name!=''">
	        AND b.name like concat('%',#{name},'%')
	    </if>
	    <if test="age!=null and age!=''">
	        <choose>
	           <when test="age == 30">
	           	  AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &lt;=30
	           </when>
	           <when test="age == 40">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=31 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=40
	           </when>
	           <when test="age == 50">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=41 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=50
	           </when>
	           <otherwise>
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=51
	           </otherwise>
	        </choose>
	       
	    </if>
	    order by a.id desc
  </select>
   
 <insert id="insertSelectivebymap" parameterType="java.util.Map" keyProperty="id" keyColumn="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into residence_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="residenceNo != null">
        residence_no,
      </if>
      <if test="relName != null">
        rel_name,
      </if>
      <if test="otherAdr != null">
        other_adr,
      </if>
      <if test="blood != null">
        blood,
      </if>
      <if test="stature != null">
        stature,
      </if>
      <if test="xyName != null">
        xy_name,
      </if>
      <if test="byState != null">
        by_state,
      </if>
      <if test="serviceAdr != null">
        service_adr,
      </if>
      <if test="proName != null">
        pro_name,
      </if>
      <if test="hPro != null">
        h_pro,
      </if>
      <if test="police != null">
        police,
      </if>
      <if test="rDate != null">
        r_date,
      </if>
      <if test="rAdr != null">
        r_adr,
      </if>
      <if test="orgAdr != null">
        org_adr,
      </if>
      <if test="qDate != null">
        q_date,
      </if>
      <if test="qAdr != null">
        q_adr,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="delDate != null">
        del_date,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="residenceNo != null">
        #{residenceNo,jdbcType=VARCHAR},
      </if>
      <if test="relName != null">
        #{relName,jdbcType=VARCHAR},
      </if>
      <if test="otherAdr != null">
        #{otherAdr,jdbcType=VARCHAR},
      </if>
      <if test="blood != null">
        #{blood,jdbcType=VARCHAR},
      </if>
      <if test="stature != null">
        #{stature,jdbcType=INTEGER},
      </if>
      <if test="xyName != null">
        #{xyName,jdbcType=VARCHAR},
      </if>
      <if test="byState != null">
        #{byState,jdbcType=VARCHAR},
      </if>
      <if test="serviceAdr != null">
        #{serviceAdr,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="hPro != null">
        #{hPro,jdbcType=VARCHAR},
      </if>
      <if test="police != null">
        #{police,jdbcType=VARCHAR},
      </if>
      <if test="rDate != null">
        #{rDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rAdr != null">
        #{rAdr,jdbcType=VARCHAR},
      </if>
      <if test="orgAdr != null">
        #{orgAdr,jdbcType=VARCHAR},
      </if>
      <if test="qDate != null">
        #{qDate,jdbcType=TIMESTAMP},
      </if>
      <if test="qAdr != null">
        #{qAdr,jdbcType=VARCHAR},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delDate != null">
        #{delDate,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
   
   
 <insert id="insertToResidenceHis" parameterType="java.util.Map">
    insert into residence_his_info_new
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
     
      <if test="residenceId != null">
        residence_id,
      </if>  
      
      <if test="type != null">
        type,
      </if>
      
      <if test="userIn != null">
        user,
      </if> 
      
      <if test="date != null">
        date,
      </if>
      
      <if test="name != null">
        name,
      </if>
      add_date,           
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      
   	 <if test="residenceId != null">
        #{residenceId},
      </if>  

   	 <if test="type != null">
        #{type},
      </if>    
      
   	 <if test="userIn != null">
        #{userIn},
      </if>  
      
  	 <if test="date != null">
        #{date},
      </if>    
  	 <if test="name != null">
        #{name},
      </if>
        now(),                
    </trim>
  </insert>
  
  <select id="getresidencebyuid" parameterType="java.lang.Integer" resultType="java.util.Map">
  	select id count from residence_info where uid=#{uid}
  </select>
   
   <select id="GetHkxxInformation" parameterType="java.lang.Integer" resultType="java.util.Map">
		SELECT
			r.*,
			DATE_FORMAT(r.r_date, '%Y-%m-%d') rDate,
			DATE_FORMAT(r.q_date, '%Y-%m-%d') qDate,
			DATE_FORMAT(r.add_date, '%Y-%m-%d') addDate,
			u.dpno res_dpno
		FROM
			residence_info r
		INNER JOIN user_info u ON r.uid = u.id
		WHERE r.id=#{id}
   </select>
   
   <select id="getlatesthkjc" parameterType="java.lang.Integer" resultType="java.util.Map">
   	select 
		a.dpno,
		b.id,
		b.user,
		b.residence_id,
		DATE_FORMAT(b.date, '%Y-%m-%d') date,
		b.name,
		d.id hid
		from 
		residence_his_info_new b
		INNER JOIN residence_info c on b.residence_id=c.id
		INNER JOIN user_info a on c.uid=a.id
		INNER JOIN residence_his_info d on b.residence_id=d.residence_id
		where b.residence_id=#{id}
		ORDER BY b.add_date
		LIMIT 1			
   </select>
   
   <select id="GetHkxxHisInformation" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			b.id uid,
			b.dpno,
			b.NAME,
			b.pnum,
			b.tel,
			b.school,
			b.major,
			DATE_FORMAT(c.j_date, '%Y-%m-%d') j_date,
			j_uid j_name,
			purpose,
			DATE_FORMAT(c.b_date, '%Y-%m-%d') b_date,
			q_uid q_name
		FROM
			residence_info a
		INNER JOIN user_info b ON a.uid = b.id
		INNER JOIN residence_his_info c ON a.id = c.residence_id
		where 1=1
		<if test="p_no != null">
          AND b.dpno = #{p_no,jdbcType=VARCHAR}
      </if>
        <if test="pnum != null">
	        AND b.pnum = #{pnum}
	    </if>
	   
	    <if test="name!=null and name!=''">
	        AND b.name like concat('%',#{name},'%')
	    </if>
	    <if test="age!=null and age!=''">
	        <choose>
	           <when test="age == 30">
	           	  AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &lt;=30
	           </when>
	           <when test="age == 40">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=31 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=40
	           </when>
	           <when test="age == 50">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=41 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=50
	           </when>
	           <otherwise>
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=51
	           </otherwise>
	        </choose>
	       
	    </if>
		ORDER BY
			c.add_date DESC
   </select>
   
   <select id="GetHkxxHisInformation1" parameterType="java.util.Map" resultType="java.util.Map">
		   SELECT
			a.id,
			b.id uid,
			b.dpno,
			b.NAME,
			b.pnum,
			b.tel,
			b.school,
			b.major,
			CASE c.type
		WHEN 1 THEN
			'归还'
		WHEN 0 THEN
			'借出'
		END AS type,
		 c.USER,
		 DATE_FORMAT(c.date, '%Y-%m-%d') j_date,
		 c. NAME userName
		FROM
			residence_info a
		INNER JOIN user_info b ON a.uid = b.id
		INNER JOIN residence_his_info_new c ON a.id = c.residence_id
		WHERE
			type IN (0, 1)
			<if test="p_no != null">
          AND b.dpno = #{p_no,jdbcType=VARCHAR}
      </if>
        <if test="pnum != null">
	        AND b.pnum = #{pnum}
	    </if>
	   
	    <if test="name!=null and name!=''">
	        AND b.name like concat('%',#{name},'%')
	    </if>
	    <if test="age!=null and age!=''">
	        <choose>
	           <when test="age == 30">
	           	  AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &lt;=30
	           </when>
	           <when test="age == 40">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=31 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=40
	           </when>
	           <when test="age == 50">
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=41 AND FLOOR((DATEDIFF(CURRENT_DATE(),UI.birth_date)/365)) &lt;=50
	           </when>
	           <otherwise>
	              AND FLOOR((DATEDIFF(CURRENT_DATE(),b.birth_date)/365)) &gt;=51
	           </otherwise>
	        </choose>
	       
	    </if>
		ORDER BY
			c.add_date DESC
   </select>
</mapper>