package com.i84.earnpoint.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.i84.earnpoint.model.ClassActionImportInfo;
import com.i84.earnpoint.model.ClassInfo;
import com.i84.earnpoint.model.UserScoreImportInfo;


/**班级管理DAO
 * @author Wangsc
 *
 */
public interface ClassInfoMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table class_info
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(Integer id);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table class_info
	 * @mbggenerated
	 */
	int insert(ClassInfo record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table class_info
	 * @mbggenerated
	 */
	int insertSelective(ClassInfo record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table class_info
	 * @mbggenerated
	 */
	ClassInfo selectByPrimaryKey(Integer id);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table class_info
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(ClassInfo record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table class_info
	 * @mbggenerated
	 */
	int updateByPrimaryKey(ClassInfo record);
	/**
	 * 新增班级
	 * @param response
	 * @param request
	 * @return
	 * @throws Exception
	 */
	public int insertClassInfo(ClassInfo classInfo);
    /**
     * 	获取班级列表
     * @param response
     * @param request
     * @return
     * @throws Exception
     */
	public List<ClassInfo> queryClassList(Map<String,Object> record);
	/**
     * 	根据条件查询到取班级具体信息
     * @param response
     * @param request
     * @return
     * @throws Exception
     */
	public ClassInfo queryClassInfoByParam(Map<String, Object> map);
	/**
	 * 编辑班级
	 * @param response
	 * @param request
	 * @return
	 * @throws Exception
	 */
	public void updateClass(ClassInfo classInfo);
	/**
	 * 失效班级
	 * @param response
	 * @param request
	 * @return
	 * @throws Exception
	 */
	public void disabledClass(Map<String, Object> map);
	/**
	 * 查询班级的执行情�?
	 * @param map
	 * @return
	 */
	public Map<String, Object> queryZxqkInfoByParam(Map<String, Object> map);
	/**
	 * 导入培训班执行情况表
	 * @param results
	 * @return
	 */
	public void insertClassActionInfo(ClassActionImportInfo classActionInfo);
	/**
	 * 导入成绩
	 * @param results
	 * @return
	 */
	public void inserUserScoreInfo(UserScoreImportInfo userScoreInfo);
	/**
	  * 获取年度执行情况
	  * @param map
	  * @return
	  */
	List queryNdhz(Map<String, Object> map);
	/**
	 * 根据班级ID查询学时和成绩为空的个数
	 * @param classId
	 * @return
	 */
	Integer qryCntScore2StimeNull(Integer classId);
	
	/**
	 * 判断同一个班级是否存在两个一样的学员
	 * @param userScoreImportInfo
	 * @return
	 */
	int isExistTheSameUserOfClass(UserScoreImportInfo userScoreImportInfo);
	
	
	/**
	 * 导入成绩
	 * @param results
	 * @return
	 */
	public void updateUserScoreInfo(UserScoreImportInfo userScoreInfo);
	
	/**
	 * 更新班级状态
	 * @param params
	 */
	void updateClassCstate(Map<String,Object> params);
	
	/**
	 * 通过班级编号获取执行情况个数
	 * @param pno
	 * @return
	 */
	public int selectClassActionInfoByPno(String pno);
	
	/**
	 * 更新班级执行情况
	 * @param classActionImportInfo
	 */
	public void updateClassActionInfo(ClassActionImportInfo classActionImportInfo);
	
	/**
	 * 培训完成情况统计
	 * @param map
	 * @return
	 */
	public List countpxwcqk(Map map);
	
	public List countpxryqktj(Map map);
	
}