package com.i84.earnpoint.mapper;


import java.util.List;
import java.util.Map;

import com.i84.earnpoint.model.BmbImport;
import com.i84.earnpoint.model.BmbInfo;
import com.i84.earnpoint.model.UserBgInfo;

/**
 * 用户报名管理DAO
 * @author wangsc
 *
 */
public interface UserBgInfoMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_bg_info
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(Integer id);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_bg_info
	 * @mbggenerated
	 */
	int insert(UserBgInfo record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_bg_info
	 * @mbggenerated
	 */
	int insertSelective(UserBgInfo record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_bg_info
	 * @mbggenerated
	 */
	UserBgInfo selectByPrimaryKey(Integer id);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_bg_info
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(UserBgInfo record);
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user_bg_info
	 * @mbggenerated
	 */
	int updateByPrimaryKey(UserBgInfo record);
	/**
	 * 报名表导入信息插入用户表
	 * @param tempVo
	 */
	void insertUserInfo(BmbImport tempVo);
	/**
	 * 报名表导入信息插入用户报名信�?
	 * @param tempVo
	 */
	void insertUserBgInfo(BmbImport tempVo);
	/**
	 * 根据条件查询用户是否已经存在�?
	 * @param tempVo
	 * @return
	 */
	int queryIsExistUserInfo(BmbImport tempVo);
	/**
	 * 更新用户�?
	 * @param tempVo
	 */
	void updateUserInfo(BmbImport tempVo);
	/**
	 * 更新用户报名�?
	 * @param tempVo
	 */
	void updateUserBgInfo(BmbImport tempVo);
	 /**
     * 报名表列表信息获�?
     * @param record
     * @return
     */
	List<BmbInfo> queryBmbList(BmbInfo record);
	
	List<Map<String, Object>> queryBmbList2(BmbInfo record);
	/**
	 * 根据条件获取报名用户的信�?
	 * @param response
	 * @param request
	 * @throws Exception
	 */
	Object queryUserBgInfoByParam(Map<String, Object> map);
	/**
	 * 审核报名用户操作
	 * @param response
	 * @param request
	 * @throws Exception
	 */
	void checkUserBgInfo(Map<String, Object> params);
	/**
	 * 查询用户报名情况
	 */
	UserBgInfo qryUserBgInfo(Integer uid);
	/**
	 * 更新报名表状�?
	 * @param userBgInfo
	 */
	void updateUserBgInfoState(UserBgInfo userBgInfo); 
	
}